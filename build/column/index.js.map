{"version":3,"file":"column/index.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAW,QCArD,GCA+BA,OAAW,GAAQ,KDAnBA,OAAW,GAAS,OEAnD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,WCAxD,EAA+BA,OAAW,GAAQ,KCiBlDC,EAAY,cACZC,EAAkB,2BAExBC,QAAQC,IAAI,qCAGZ,MAAMC,EAAQ,CACb,CACCC,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,EACPC,MAAO,KAER,CACCD,MAAO,GACPC,MAAO,MAER,CACCD,MAAO,GACPC,MAAO,MAER,CACCD,MAAO,GACPC,MAAO,QAITC,EAAAA,EAAAA,WACC,2BACAN,GACCO,IACIR,IAAcQ,EAASC,OAI5BP,QAAQC,IAAI,wBAAyBK,GAEVA,EAASE,aAL5BF,MAaTD,EAAAA,EAAAA,WACC,mBACAN,GACAU,EAAAA,EAAAA,6BACEC,GACA,SAAoCC,GACnCX,QAAQC,IAAI,cAAeU,GAC3B,MAAM,KAAEJ,EAAF,WAAQK,EAAR,cAAoBC,EAApB,SAAmCC,EAAnC,QAA6CC,GAAYJ,EAC/D,GAAIb,IAAcS,EACjB,OAAO,mBAACG,EAAcC,GAGvB,MAAM,MAAEK,EAAF,WAASC,IAAeC,EAAAA,EAAAA,YAAWC,IACxC,MAAM,cAAEC,EAAF,mBAAiBC,EAAjB,qBAAqCC,GAAyBH,EAAQ,qBAC5E,MAAO,CACNH,MAAOI,EAAeN,GAAa,EACnCG,WAAYI,EAAoBC,EAAsBR,IAAaG,WAFpE,KAMK,UAAEM,EAAF,SAAaC,EAAb,UAAuBC,GAAcb,EAyC3C,OAvCgBa,GAAYA,EAAUC,MAAM,MAwC3C,mBAAC,EAAAC,SAAD,KACEV,IACA,mBAAC,EAAAW,kBAAD,MACC,mBAAC,EAAAC,UAAD,CAAWC,MAAM,SAChB,0BAAKL,UAAU,6BACd,mBAAC,EAAAM,aAAD,CACC3B,MAAM,QACND,MAAQoB,EACRS,SAAaC,IACZpB,EAAc,CAACU,UAAWU,GAA1B,EAEDC,gBAAgB,EAChBC,IAAM,EACNC,IAAM,GACNC,MAAOnC,EACPoC,gBAAiB,EACjBC,YAAY,KAEb,mBAAC,EAAAC,YAAD,OACA,mBAAC,EAAAT,aAAD,CACC3B,MAAM,OACND,MAAQqB,EACRQ,SAAaS,IACZzC,QAAQC,IAAI,WAAYwC,GACxB5B,EAAc,CAACW,SAAUiB,GAAzB,EAGDP,gBAAgB,EAChBC,IAAM,EACNC,IAAM,GACNC,MAAOnC,QAMZ,mBAACQ,EAAcC,GAGjB,GACF,6BAED,G","sources":["webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"element\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"hooks\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"compose\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"components\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"data\"]","webpack://@pewresearch/block-library-primitives/./src/column/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { Fragment, useEffect } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tRangeControl,\n\tCardDivider,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\nimport './index.scss';\n\nconst BLOCKNAME = 'core/column';\nconst BLOCKIDENTIFIER = 'prc-block-library/column';\n\nconsole.log('Hello World -> src/column/edit.js');\n// Need to add context to the block also through javascript..\n\nconst MARKS = [\n\t{\n\t\tvalue: 1,\n\t\tlabel: '1',\n\t},\n\t{\n\t\tvalue: 2,\n\t\tlabel: '2',\n\t},\n\t{\n\t\tvalue: 3,\n\t\tlabel: '3',\n\t},\n\t{\n\t\tvalue: 4,\n\t\tlabel: '4',\n\t},\n\t{\n\t\tvalue: 5,\n\t\tlabel: '5',\n\t},\n\t{\n\t\tvalue: 6,\n\t\tlabel: '6',\n\t},\n\t{\n\t\tvalue: 7,\n\t\tlabel: '7',\n\t},\n\t{\n\t\tvalue: 8,\n\t\tlabel: '8',\n\t},\n\t{\n\t\tvalue: 9,\n\t\tlabel: '9',\n\t},\n\t{\n\t\tvalue: 10,\n\t\tlabel: '10',\n\t},\n\t{\n\t\tvalue: 11,\n\t\tlabel: '11',\n\t},\n\t{\n\t\tvalue: 12,\n\t\tlabel: '12',\n\t},\n];\n\naddFilter(\n\t'blocks.registerBlockType',\n\tBLOCKIDENTIFIER,\n\t(settings) => {\n\tif ( BLOCKNAME !== settings.name) {\n\t\treturn settings;\n\t}\n\n\tconsole.log(\"Column Block Settings\", settings);\n\n\tif ('undefined' !== typeof settings.usesContext) {\n\t\t// During the group block's development the alignment options have changed, here we are enforcing all alignments to be available.\n\t\t// settings.usesContext = ['core/columns/useCSSGrid'];\n\t}\n\n\treturn settings;\n});\n\naddFilter(\n\t'editor.BlockEdit',\n\tBLOCKIDENTIFIER,\n\tcreateHigherOrderComponent(\n\t\t(BlockEdit) =>\n\t\t\tfunction ColumnBlockCSSGridControls(props) {\n\t\t\t\tconsole.log(\"Column Edit\", props);\n\t\t\t\tconst { name, attributes, setAttributes, clientId, context } = props;\n\t\t\t\tif (BLOCKNAME !== name) {\n\t\t\t\t\treturn <BlockEdit {...props} />;\n\t\t\t\t}\n\n\t\t\t\tconst { index, useCSSGrid } = useSelect( select => {\n\t\t\t\t\tconst { getBlockIndex, getBlockAttributes, getBlockRootClientId } = select( 'core/block-editor' );\n\t\t\t\t\treturn {\n\t\t\t\t\t\tindex: getBlockIndex( clientId ) + 1,\n\t\t\t\t\t\tuseCSSGrid: getBlockAttributes( getBlockRootClientId( clientId ) ).useCSSGrid,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\tconst { gridStart, gridSpan, className } = attributes;\n\n\t\t\t\tconst classes = className ? className.split(' ') : [];\n\n\t\t\t\tconst handleGridSpanChange = (gridSpanChange) => {\n\t\t\t\t\tclasses.forEach((item, index) => {\n\t\t\t\t\t\tconsole.log(\"inspect class item\", item, index, item.includes('grid__span-'));\n\t\t\t\t\t\tif (item.includes('grid__span-')) {\n\t\t\t\t\t\t\tclasses.splice(index, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconst newGridSpanClassName = `column${index}-grid__span-${gridSpan}`;\n\t\t\t\t\tif ( ! classes.includes( newGridSpanClassName ) ) {\n\t\t\t\t\t\tclasses.push(newGridSpanClassName);\n\t\t\t\t\t}\n\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\tgridSpan: newGridSpan,\n\t\t\t\t\t\tclassName: classes.join(' ')\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Handle gridStart changes:\n\t\t\t\t// useEffect( () => {\n\t\t\t\t// \tif ( gridStart ) {\n\t\t\t\t// \t\tclasses.forEach((item, index) => {\n\t\t\t\t// \t\t\tconsole.log(\"inspect class item\", item, index, item.includes('grid__span-'));\n\t\t\t\t// \t\t\tif (item.includes('grid__span-')) {\n\t\t\t\t// \t\t\t\tclasses.splice(index, 1);\n\t\t\t\t// \t\t\t}\n\t\t\t\t// \t\t});\n\n\t\t\t\t// \t\tconst newgridStartClassName = `column${index}-grid__start-${gridStart}`;\n\t\t\t\t// \t\tif ( ! classes.includes( newgridStartClassName ) ) {\n\t\t\t\t// \t\t\tclasses.push(newgridStartClassName);\n\t\t\t\t// \t\t}\n\t\t\t\t// \t\tsetAttributes({ className: classes.join(' ') });\n\t\t\t\t// \t}\n\t\t\t\t// \tconsole.log('gridStart respond to class changes', classes);\n\t\t\t\t// }, [gridStart]);\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{useCSSGrid && (\n\t\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t\t<PanelBody title=\"Grid\">\n\t\t\t\t\t\t\t\t\t<div className=\"css-grid-column-controls\">\n\t\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Start\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ gridStart }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ ( startPosition ) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetAttributes({gridStart: startPosition});\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\twithInputField={false}\n\t\t\t\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\t\t\t\tmax={ 12 }\n\t\t\t\t\t\t\t\t\t\t\tmarks={MARKS}\n\t\t\t\t\t\t\t\t\t\t\tinitialPosition={0}\n\t\t\t\t\t\t\t\t\t\t\tallowReset={true}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<CardDivider/>\n\t\t\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Span\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={ gridSpan }\n\t\t\t\t\t\t\t\t\t\t\tonChange={ ( newSpan ) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"NEWSPAN:\", newSpan);\n\t\t\t\t\t\t\t\t\t\t\t\tsetAttributes({gridSpan: newSpan});\n\t\t\t\t\t\t\t\t\t\t\t\t// handleGridSpanChange(newSpan + 1);\n\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\twithInputField={false}\n\t\t\t\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\t\t\t\tmax={ 12 }\n\t\t\t\t\t\t\t\t\t\t\tmarks={MARKS}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t},\n\t\t'withColumnCSSGridControls',\n\t),\n\t21,\n);\n"],"names":["window","BLOCKNAME","BLOCKIDENTIFIER","console","log","MARKS","value","label","addFilter","settings","name","usesContext","createHigherOrderComponent","BlockEdit","props","attributes","setAttributes","clientId","context","index","useCSSGrid","useSelect","select","getBlockIndex","getBlockAttributes","getBlockRootClientId","gridStart","gridSpan","className","split","Fragment","InspectorControls","PanelBody","title","RangeControl","onChange","startPosition","withInputField","min","max","marks","initialPosition","allowReset","CardDivider","newSpan"],"sourceRoot":""}
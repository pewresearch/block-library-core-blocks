{"version":3,"file":"columns/index.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAS,MCAnD,EAA+BA,OAAW,GAAW,QCArD,GCA+BA,OAAW,GAAU,ODArBA,OAAW,GAAe,aEAzD,EAA+BA,OAAW,GAAc,WCAzBA,OAAW,GAAQ,KCAxDC,QAAQC,IAAI,uCAwBZC,EAAAA,EAAAA,WACC,mBACA,kCACAC,EAAAA,EAAAA,6BACEC,GACA,SAAuCC,GACtC,MAAM,KAAEC,EAAF,WAAQC,EAAR,cAAoBC,EAApB,SAAmCC,GAAaJ,EACtD,GAAI,iBAAmBC,EACtB,OAAO,mBAACF,EAAcC,GAGvB,MAAMK,EAAWC,SAASC,eAAgB,SAAQH,KAElDT,QAAQC,IAAI,kBAAmBI,EAAOK,GAEtC,MAAM,mBAAEG,GAAuBN,EAS/B,OAPAO,EAAAA,EAAAA,YAAU,QAKP,CAACD,KAGH,mBAAC,EAAAE,SAAD,MACC,mBAAC,EAAAC,0BAAD,MACC,mBAAC,EAAAC,cAAD,CACCC,OAAOC,EAAAA,EAAAA,IAAG,wBACVC,QAASP,EACTQ,SAAU,KACTb,EAAc,CAAEK,oBAAqBA,GAArC,KAGF,mBAAC,EAAAS,YAAD,QAED,mBAAClB,EAAcC,GAGjB,GACF,oCAED,G","sources":["webpack://@pewresearch/core-block-library/external window [\"wp\",\"element\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"hooks\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"compose\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"blocks\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"components\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"data\"]","webpack://@pewresearch/core-block-library/./src/columns/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","console.log(\"Hello World -> src/column/index.js\");\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport {\n\tcreateBlock,\n\tregisterBlockStyle,\n\tregisterBlockVariation,\n\trawHandler,\n} from '@wordpress/blocks';\nimport { Fragment, useEffect, useRef } from '@wordpress/element';\nimport { InspectorControls, InspectorAdvancedControls } from '@wordpress/block-editor';\nimport {\n\tTextControl,\n\tToggleControl,\n\tCardDivider,\n\tPanelBody,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\n\naddFilter(\n\t'editor.BlockEdit',\n\t'prc-core-block-library/columns',\n\tcreateHigherOrderComponent(\n\t\t(BlockEdit) =>\n\t\t\tfunction ColumnsBlockAdvancedControls (props) {\n\t\t\t\tconst { name, attributes, setAttributes, clientId } = props;\n\t\t\t\tif ('core/columns' !== name) {\n\t\t\t\t\treturn <BlockEdit {...props} />;\n\t\t\t\t}\n\n\t\t\t\tconst blockRef = document.getElementById(`block-${clientId}`);\n\n\t\t\t\tconsole.log(\"Columns Props: \", props, blockRef);\n\n\t\t\t\tconst { fillViewportHeight } = attributes;\n\n\t\t\t\tuseEffect(()=>{\n\t\t\t\t\t// console.log(\"useEffect() blockRef: \", blockRef);\n\t\t\t\t\t// if (blockRef.current) {\n\t\t\t\t\t// \tblockRef.current.style.height = fillViewportHeight ? '100vh' : '';\n\t\t\t\t\t// }\n\t\t\t\t}, [fillViewportHeight]);\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<InspectorAdvancedControls>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Fill viewport height')}\n\t\t\t\t\t\t\t\tchecked={fillViewportHeight}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetAttributes({ fillViewportHeight: !fillViewportHeight });\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<CardDivider />\n\t\t\t\t\t\t</InspectorAdvancedControls>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t},\n\t\t'withColumnsBlockAdvancedControls',\n\t),\n\t21,\n);\n"],"names":["window","console","log","addFilter","createHigherOrderComponent","BlockEdit","props","name","attributes","setAttributes","clientId","blockRef","document","getElementById","fillViewportHeight","useEffect","Fragment","InspectorAdvancedControls","ToggleControl","label","__","checked","onChange","CardDivider"],"sourceRoot":""}
{"version":3,"file":"columns/index.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAS,MCAnD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,WCAxD,EAA+BA,OAAW,GAAU,OCyBpDC,GACL,mBAAC,EAAAC,IAAD,CACCC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,cAER,mBAAC,EAAAC,KAAD,CAAMC,EAAE,0MAIVC,EAAAA,EAAAA,WACC,mBAduB,6BAgBvBC,EAAAA,EAAAA,6BACEC,GACA,SAAqCC,GACpC,MAAM,KAAEC,EAAF,WAAQC,EAAR,cAAoBC,GAAkBH,EAC5C,GArBc,iBAqBIC,EACjB,OAAO,mBAACF,EAAcC,GAGvB,MAAM,WAAEI,EAAF,cAAcC,EAAd,UAA6BC,GAAcJ,EAE3CK,EAAUD,EAAYA,EAAUE,MAAM,KAAO,GAEnD,OACC,mBAAC,EAAAC,SAAD,MACC,mBAACV,EAAcC,IACf,mBAAC,EAAAU,kBAAD,MACC,mBAAC,EAAAC,UAAD,CAAWC,MAAM,aAChB,mBAAC,EAAAC,cAAD,CACCC,OAAOC,EAAAA,EAAAA,IAAG,mBACVC,QAASZ,EACTa,SAAUC,IACLA,EACEX,EAAQY,SAAS,gBACrBZ,EAAQa,KAAK,eAGdb,EAAQc,OAAOd,EAAQe,QAAQ,eAAgB,GAEhDnB,EAAc,CACbG,UAAWC,EAAQgB,KAAK,KACxBnB,YAAaA,GAFd,EAKDoB,MAAMT,EAAAA,EAAAA,IAAG,iIAEV,mBAAC,EAAAF,cAAD,CACCC,OAAOC,EAAAA,EAAAA,IAAG,kBACVU,UAAWrB,EACXY,QAASX,EACTY,SAAUC,IACLA,EACEX,EAAQY,SAAS,gBACrBZ,EAAQa,KAAK,eAGdb,EAAQc,OAAOd,EAAQe,QAAQ,eAAgB,GAEhDnB,EAAc,CACbG,UAAWC,EAAQgB,KAAK,KACxBlB,eAAgBA,GAFjB,MAUN,GACF,8BAED,KAMD,MAAMqB,EAAiB,CACtBpB,UAAW,cACXF,YAAY,EACZC,eAAe,GAEVsB,EAAqB,CAC1B,CAAE,cAAe,CAAErB,UAAW,+EAAgFsB,SAAU,EAAGC,eAAgB,EAAGC,eAAgB,IAC9J,CAAE,cAAe,CAAExB,UAAW,+EAAgFsB,SAAU,EAAGC,eAAgB,EAAGC,eAAgB,IAC9J,CAAE,cAAe,CAAExB,UAAW,+EAAgFsB,SAAU,EAAGC,eAAgB,EAAGC,eAAgB,KAEzJC,EAAmBJ,EAAkBK,KAAKC,IACxC,CACNhC,KAAMgC,EAAM,GACZ/B,WAAY,IACR+B,EAAM,IAEVC,YAAa,CACZ,CACCjC,KAAM,iBACNC,WAAY;;AAEXiC,SAASpB,EAAAA,EAAAA,IACR,+FAONqB,EAAAA,EAAAA,wBAAuB,eAAgB,CACtCnC,KAAM,WACNW,OAAOG,EAAAA,EAAAA,IAAG,WAAY,qBACtB1B,OACAgD,aAAatB,EAAAA,EAAAA,IACZ,gGACA,qBAEDb,WAAYwB,EACZQ,YAAa,IAAIP,GACjBW,QAAS,CACRpC,WAAYwB,EACZQ,YAAaH,EACbQ,cAAe,MAEhBC,SAAU,CAACC,EAAiBC,IAC3BD,EAAgBrC,aAAesC,EAAoBtC,Y","sources":["webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"element\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"hooks\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"compose\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"components\"]","webpack://@pewresearch/block-library-primitives/external window [\"wp\",\"blocks\"]","webpack://@pewresearch/block-library-primitives/./src/columns/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { Fragment, useEffect } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n\tPanelBody,\n\tToggleControl,\n\tCardDivider,\n\tPath,\n\tSVG\n} from '@wordpress/components';\nimport { registerBlockVariation } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport './index.scss';\n\nconst BLOCKNAME = 'core/columns';\nconst BLOCKIDENTIFIER = 'prc-block-library/columns';\n\nconst icon = (\n\t<SVG\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24\"\n\t\theight=\"24\"\n\t\tviewBox=\"0 0 24 24\"\n\t>\n\t\t<Path d=\"M19 6H6c-1.1 0-2 .9-2 2v9c0 1.1.9 2 2 2h13c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-7.5 11.5H6c-.3 0-.5-.2-.5-.5V8c0-.3.2-.5.5-.5h5.5v10zm4 0H13v-10h2.5v10zm4-.5c0 .3-.2.5-.5.5h-2v-10h2c.3 0 .5.2.5.5v9z\" />\n\t</SVG>\n);\n\naddFilter(\n\t'editor.BlockEdit',\n\tBLOCKIDENTIFIER,\n\tcreateHigherOrderComponent(\n\t\t(BlockEdit) =>\n\t\t\tfunction ColumnsBlockCSSGridControls(props) {\n\t\t\t\tconst { name, attributes, setAttributes } = props;\n\t\t\t\tif (BLOCKNAME !== name) {\n\t\t\t\t\treturn <BlockEdit {...props} />;\n\t\t\t\t}\n\n\t\t\t\tconst { useCSSGrid, enableDivider, className } = attributes;\n\n\t\t\t\tconst classes = className ? className.split(' ') : [];\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t<PanelBody title=\"CSS Grid\">\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={__('Enable CSS Grid')}\n\t\t\t\t\t\t\t\t\tchecked={useCSSGrid}\n\t\t\t\t\t\t\t\t\tonChange={val => {\n\t\t\t\t\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\t\t\t\t\tif (!classes.includes('is-css-grid')) {\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.push('is-css-grid');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tclasses.splice(classes.indexOf('is-css-grid'), 1);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tclassName: classes.join(' '),\n\t\t\t\t\t\t\t\t\t\t\tuseCSSGrid: !useCSSGrid,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\thelp={__('When this is enabled, columns will be displayed using CSS grid as a result options like \"stack on mobile\" will be ignored.')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\t\tlabel={__('Enable Divider')}\n\t\t\t\t\t\t\t\t\tdisabled={!useCSSGrid}\n\t\t\t\t\t\t\t\t\tchecked={enableDivider}\n\t\t\t\t\t\t\t\t\tonChange={val => {\n\t\t\t\t\t\t\t\t\t\tif (val) {\n\t\t\t\t\t\t\t\t\t\t\tif (!classes.includes('has-divider')) {\n\t\t\t\t\t\t\t\t\t\t\t\tclasses.push('has-divider');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tclasses.splice(classes.indexOf('has-divider'), 1);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\tclassName: classes.join(' '),\n\t\t\t\t\t\t\t\t\t\t\tenableDivider: !enableDivider,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t},\n\t\t'withColumnsCSSGridControls',\n\t),\n\t100,\n);\n\n/**\n * Grid Block\n */\nconst gridBlockAttrs = {\n\tclassName: 'is-css-grid',\n\tuseCSSGrid: true,\n\tenableDivider: true,\n};\nconst gridBlockTemplate =  [\n\t[ 'core/column', { className: 'column1-grid__span-3 column1-tablet-grid__span-2 column1-mobile-grid__span-4', gridSpan: 3, tabletGridSpan: 2, mobileGridSpan: 4, } ],\n\t[ 'core/column', { className: 'column2-grid__span-6 column2-tablet-grid__span-4 column2-mobile-grid__span-4', gridSpan: 6, tabletGridSpan: 4, mobileGridSpan: 4 } ],\n\t[ 'core/column', { className: 'column3-grid__span-3 column3-tablet-grid__span-2 column3-mobile-grid__span-4', gridSpan: 3, tabletGridSpan: 2, mobileGridSpan: 4 } ],\n];\nconst gridBlockExample = gridBlockTemplate.map((block) => {\n\treturn {\n\t\tname: block[0],\n\t\tattributes: {\n\t\t\t...block[1],\n\t\t},\n\t\tinnerBlocks: [\n\t\t\t{\n\t\t\t\tname: 'core/paragraph',\n\t\t\t\tattributes: {\n\t\t\t\t\t/* translators: example text. */\n\t\t\t\t\tcontent: __(\n\t\t\t\t\t\t'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent et eros eu felis.'\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t]\n\t};\n});\nregisterBlockVariation('core/columns', {\n\tname: 'css-grid',\n\ttitle: __('CSS Grid', 'prc-block-library'),\n\ticon,\n\tdescription: __(\n\t\t'A columns block set to use CSS Grid. This block is experimental and may change in the future.',\n\t\t'prc-block-library',\n\t),\n\tattributes: gridBlockAttrs,\n\tinnerBlocks: [...gridBlockTemplate],\n\texample: {\n\t\tattributes: gridBlockAttrs,\n\t\tinnerBlocks: gridBlockExample,\n\t\tviewportWidth: 1200,\n\t},\n\tisActive: (blockAttributes, variationAttributes) =>\n\t\tblockAttributes.useCSSGrid === variationAttributes.useCSSGrid,\n});\n"],"names":["window","icon","SVG","xmlns","width","height","viewBox","Path","d","addFilter","createHigherOrderComponent","BlockEdit","props","name","attributes","setAttributes","useCSSGrid","enableDivider","className","classes","split","Fragment","InspectorControls","PanelBody","title","ToggleControl","label","__","checked","onChange","val","includes","push","splice","indexOf","join","help","disabled","gridBlockAttrs","gridBlockTemplate","gridSpan","tabletGridSpan","mobileGridSpan","gridBlockExample","map","block","innerBlocks","content","registerBlockVariation","description","example","viewportWidth","isActive","blockAttributes","variationAttributes"],"sourceRoot":""}
{"version":3,"file":"navigation-submenu/editor.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAQ,KCAlD,EAA+BA,OAAW,GAAS,MCAnD,EAA+BA,OAAW,GAAW,QCArD,EAA+BA,OAAW,GAAe,YCAzD,EAA+BA,OAAW,GAAc,YCsB9DC,EAAAA,EAAAA,WACC,2BACA,6CACA,CAACC,EAAUC,KACN,4BAA8BA,IAGlCD,EAASE,WAAWC,qBAAuB,CAC1CC,KAAM,WAHCJ,MASVD,EAAAA,EAAAA,WACC,mBACA,6CACAM,EAAAA,EAAAA,6BACEC,GACA,SAAgDC,GAC/C,MAAM,KAAEN,EAAF,WAAQC,EAAR,cAAoBM,GAAkBD,EAC5C,GAAI,4BAA8BN,EACjC,OAAO,mBAACK,EAAcC,GAGvB,MAAM,qBAAEJ,EAAF,MAAwBM,EAAxB,UAA+BC,GAAcR,EAEnD,GAAI,wBAA0BQ,EAC7B,OAAO,mBAACJ,EAAcC,GAGvB,IAAII,EACH,SAAWF,EAAQ,OAAS,gCAQ7B,MAPI,WAAaA,IAChBE,EAAc,YAEX,SAAWF,IACdE,EAAc,UAId,mBAAC,EAAAC,SAAD,MACC,mBAAC,EAAAC,kBAAD,MACC,mBAAC,EAAAC,UAAD,CACCC,OAAOC,EAAAA,EAAAA,IAAG,sBAAuB,4BAEjC,mBAAC,EAAAC,YAAD,CACCR,OAAOO,EAAAA,EAAAA,IAAG,iBAAkB,0BAC5BE,KAAK,qDACLC,MAAOhB,EACPiB,SAAWD,GACVX,EAAc,CAAEL,qBAAsBgB,IAEvCR,YAAaA,OAIhB,mBAACL,EAAcC,GAGjB,GACF,8CAED,G","sources":["webpack://@pewresearch/core-block-library/external window [\"wp\",\"element\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"hooks\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"compose\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"components\"]","webpack://@pewresearch/core-block-library/./src/navigation-submenu/editor.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { addFilter } from '@wordpress/hooks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { Fragment } from '@wordpress/element';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { TextControl, PanelBody } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport './editor.scss';\n\n/**\n * Modify default settings on core/navigation-submenu block. Sometimes defining attributes via PHP is not enough and this is, oddly, one of them.\n *\n * @param {*} settings\n * @param {*} name\n * @returns\n */\naddFilter(\n\t'blocks.registerBlockType',\n\t'prc-core-block-library/navigation-submenu',\n\t(settings, name) => {\n\t\tif ('core/navigation-submenu' !== name) {\n\t\t\treturn settings;\n\t\t}\n\t\tsettings.attributes.subExpandOpenedLabel = {\n\t\t\ttype: 'string',\n\t\t};\n\t\treturn settings;\n\t},\n);\n\naddFilter(\n\t'editor.BlockEdit',\n\t'prc-core-block-library/navigation-submenu',\n\tcreateHigherOrderComponent(\n\t\t(BlockEdit) =>\n\t\t\tfunction NavigationSubmenublockAdvancedControls(props) {\n\t\t\t\tconst { name, attributes, setAttributes } = props;\n\t\t\t\tif ('core/navigation-submenu' !== name) {\n\t\t\t\t\treturn <BlockEdit {...props} />;\n\t\t\t\t}\n\n\t\t\t\tconst { subExpandOpenedLabel, label, className } = attributes;\n\n\t\t\t\tif ('is-style-sub-expand' !== className) {\n\t\t\t\t\treturn <BlockEdit {...props} />;\n\t\t\t\t}\n\n\t\t\t\tlet placeholder =\n\t\t\t\t\t'More' === label ? 'Less' : '~ Less or Close or Collapse ~';\n\t\t\t\tif ('Expand' === label) {\n\t\t\t\t\tplaceholder = 'Collapse';\n\t\t\t\t}\n\t\t\t\tif ('Open' === label) {\n\t\t\t\t\tplaceholder = 'Close';\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t\t<PanelBody\n\t\t\t\t\t\t\t\ttitle={__('Sub Expand settings', 'prc-core-block-library')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\t\tlabel={__('Expanded Label', 'prc-core-block-library')}\n\t\t\t\t\t\t\t\t\thelp=\"The label to display when the submenu is expanded.\"\n\t\t\t\t\t\t\t\t\tvalue={subExpandOpenedLabel}\n\t\t\t\t\t\t\t\t\tonChange={(value) =>\n\t\t\t\t\t\t\t\t\t\tsetAttributes({ subExpandOpenedLabel: value })\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t\t</InspectorControls>\n\t\t\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t},\n\t\t'withNavigationSubmenuBlockAdvancedControls',\n\t),\n\t21,\n);\n"],"names":["window","addFilter","settings","name","attributes","subExpandOpenedLabel","type","createHigherOrderComponent","BlockEdit","props","setAttributes","label","className","placeholder","Fragment","InspectorControls","PanelBody","title","__","TextControl","help","value","onChange"],"sourceRoot":""}
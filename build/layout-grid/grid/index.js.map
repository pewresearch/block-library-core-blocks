{"version":3,"file":"layout-grid/grid/index.js","mappings":"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","sources":["webpack://@pewresearch/core-block-library/webpack/runtime/chunk loaded","webpack://@pewresearch/core-block-library/external window [\"wp\",\"blocks\"]","webpack://@pewresearch/core-block-library/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@pewresearch/core-block-library/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@pewresearch/core-block-library/external window [\"wp\",\"element\"]","webpack://@pewresearch/core-block-library/external window \"lodash\"","webpack://@pewresearch/core-block-library/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"components\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"keycodes\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"compose\"]","webpack://@pewresearch/core-block-library/external window [\"wp\",\"primitives\"]","webpack://@pewresearch/core-block-library/./node_modules/@wordpress/icons/build-module/library/desktop.js","webpack://@pewresearch/core-block-library/./node_modules/@wordpress/icons/build-module/library/tablet.js","webpack://@pewresearch/core-block-library/./node_modules/@wordpress/icons/build-module/library/mobile.js","webpack://@pewresearch/core-block-library/./src/layout-grid/constants.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/grid-defaults.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/css-classname.js","webpack://@pewresearch/core-block-library/./src/layout-grid/icons.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/resize-grid/resize-handle.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/resize-grid/index.jsx","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/layout-grid/index.js","webpack://@pewresearch/core-block-library/external window [\"wp\",\"data\"]","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/preview-device.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/higher-order.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/edit.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/variations.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/index.js","webpack://@pewresearch/core-block-library/./src/layout-grid/grid/save.js","webpack://@pewresearch/core-block-library/./node_modules/classnames/index.js","webpack://@pewresearch/core-block-library/webpack/bootstrap","webpack://@pewresearch/core-block-library/webpack/runtime/compat get default export","webpack://@pewresearch/core-block-library/webpack/runtime/define property getters","webpack://@pewresearch/core-block-library/webpack/runtime/hasOwnProperty shorthand","webpack://@pewresearch/core-block-library/webpack/runtime/jsonp chunk loading","webpack://@pewresearch/core-block-library/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"lodash\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"keycodes\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"compose\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst desktop = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M20.5 16h-.7V8c0-1.1-.9-2-2-2H6.2c-1.1 0-2 .9-2 2v8h-.7c-.8 0-1.5.7-1.5 1.5h20c0-.8-.7-1.5-1.5-1.5zM5.7 8c0-.3.2-.5.5-.5h11.6c.3 0 .5.2.5.5v7.6H5.7V8z\"\n}));\nexport default desktop;\n//# sourceMappingURL=desktop.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst tablet = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M17 4H7c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h10c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H7c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h10c.3 0 .5.2.5.5v12zm-7.5-.5h4V16h-4v1.5z\"\n}));\nexport default tablet;\n//# sourceMappingURL=tablet.js.map","import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst mobile = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M15 4H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h6c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm.5 14c0 .3-.2.5-.5.5H9c-.3 0-.5-.2-.5-.5V6c0-.3.2-.5.5-.5h6c.3 0 .5.2.5.5v12zm-4.5-.5h2V16h-2v1.5z\"\n}));\nexport default mobile;\n//# sourceMappingURL=mobile.js.map","/**\n * WordPress Dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { mobile, tablet, desktop } from '@wordpress/icons';\n\nfunction getSpacingValues() {\n\treturn [\n\t\t{ value: 'small', label: __('Small', 'layout-grid') },\n\t\t{ value: 'medium', label: __('Medium', 'layout-grid') },\n\t\t{ value: 'large', label: __('Large', 'layout-grid') },\n\t\t{ value: 'huge', label: __('Huge', 'layout-grid') },\n\t];\n}\n\nexport const getPaddingValues = () =>\n\t[{ value: 'none', label: __('No padding', 'layout-grid') }].concat(\n\t\tgetSpacingValues(),\n\t);\n\nexport const getGutterValues = () =>\n\t[{ value: 'none', label: __('No gutter', 'layout-grid') }].concat(\n\t\tgetSpacingValues(),\n\t);\n\nexport const getColumns = () => [\n\t{\n\t\tlabel: __('1 cols', 'layout-grid'),\n\t\tvalue: 1,\n\t},\n\t{\n\t\tlabel: __('2 cols', 'layout-grid'),\n\t\tvalue: 2,\n\t},\n\t{\n\t\tlabel: __('3 cols', 'layout-grid'),\n\t\tvalue: 3,\n\t},\n\t{\n\t\tlabel: __('4 cols', 'layout-grid'),\n\t\tvalue: 4,\n\t},\n];\n\nexport const DEVICE_DESKTOP = 'Desktop';\nexport const DEVICE_TABLET = 'Tablet';\nexport const DEVICE_MOBILE = 'Mobile';\n\nexport const getLayouts = () => [\n\t{\n\t\tvalue: DEVICE_DESKTOP,\n\t\tlabel: __('Desktop', 'layout-grid'),\n\t\ticon: desktop,\n\t},\n\t{\n\t\tvalue: DEVICE_TABLET,\n\t\tlabel: __('Tablet', 'layout-grid'),\n\t\ticon: tablet,\n\t},\n\t{\n\t\tvalue: DEVICE_MOBILE,\n\t\tlabel: __('Mobile', 'layout-grid'),\n\t\ticon: mobile,\n\t},\n];\n\nexport const MAX_COLUMNS = 4;\n\nexport const DEVICE_BREAKPOINTS = [\n\tDEVICE_DESKTOP,\n\tDEVICE_TABLET,\n\tDEVICE_MOBILE,\n];\n\nexport function getSpanForDevice(column, device) {\n\treturn `column${column + 1}${device}Span`;\n}\n\nexport function getOffsetForDevice(column, device) {\n\treturn `column${column + 1}${device}Offset`;\n}\n","/**\n * Internal Dependencies\n */\n\nimport { DEVICE_MOBILE, DEVICE_TABLET } from '../constants';\n\nexport const getGridWidth = (device) => {\n\tif (device === DEVICE_TABLET) {\n\t\treturn 8;\n\t}\n\tif (device === DEVICE_MOBILE) {\n\t\treturn 4;\n\t}\n\n\treturn 12;\n};\n\nexport const getGridRows = (device) => {\n\tif (device === DEVICE_TABLET) {\n\t\treturn 2;\n\t}\n\tif (device === DEVICE_MOBILE) {\n\t\treturn 4;\n\t}\n\n\treturn 1;\n};\n\nexport const getGridMax = (device, columns) => {\n\tif (device === DEVICE_TABLET && 2 < columns) {\n\t\t// 2x2 grid\n\t\treturn getGridWidth(device) * 2;\n\t}\n\n\tif (device === DEVICE_MOBILE) {\n\t\treturn getGridWidth(device) * columns;\n\t}\n\n\treturn getGridWidth(device);\n};\n\n// Default spans to fill the device\n// 1 column: desktop=1x12x1 tablet=1x8x1 mobile=1x4x1\n// 2 column: desktop=2x6x1 tablet=2x4x1 mobile=1x4x2\n// 3 column: desktop=3x4x1 tablet=2x4x1 + 1x8x1 mobile=1x4x3\n// 4 column: desktop=4x3x1 tablet=2x4x2 mobile=1x4x4\nexport function getDefaultSpan(device, columns, column) {\n\tif (device === DEVICE_TABLET) {\n\t\tif (3 === columns && 2 === column) {\n\t\t\treturn getGridWidth(device);\n\t\t}\n\t\tif (1 < columns) {\n\t\t\treturn getGridWidth(device) / 2;\n\t\t}\n\n\t\treturn getGridWidth(device);\n\t}\n\n\tif (device === DEVICE_MOBILE) {\n\t\treturn getGridWidth(device);\n\t}\n\n\treturn getGridWidth(device) / columns;\n}\n","/**\n * Internal Dependencies\n */\n\nimport {\n\tDEVICE_BREAKPOINTS,\n\tgetSpanForDevice,\n\tgetOffsetForDevice,\n} from '../constants';\nimport { getDefaultSpan, getGridWidth } from './grid-defaults';\n\n// eslint-disable-next-line prettier/prettier\nconst getDevicelessSpanClassName = ( column, value ) => `column${ column + 1 }-grid__span-${ value }`;\n// eslint-disable-next-line prettier/prettier\nconst getDevicelessOffsetClassName = ( column, value ) => `column${ column + 1 }-grid__start-${ value }`;\n// eslint-disable-next-line prettier/prettier\nconst getDevicelessRowClassName = ( column, value ) => `column${ column + 1 }-grid__row-${ value }`;\n// eslint-disable-next-line prettier/prettier\nconst getDevicelessAlignmentClassName = ( column, value ) => `column${ column + 1 }-grid__valign-${ value }`;\n// eslint-disable-next-line prettier/prettier\nconst getDeviceSpanClassName = ( column, value, device ) => `column${ column + 1 }-${ device.toLowerCase() }-grid__span-${ value }`;\n// eslint-disable-next-line prettier/prettier\nconst getDeviceOffsetClassName = ( column, value, device ) => `column${ column + 1 }-${ device.toLowerCase() }-grid__start-${ value }`;\n// eslint-disable-next-line prettier/prettier\nconst getDeviceRowClassName = ( column, value, device ) => `column${ column + 1 }-${ device.toLowerCase() }-grid__row-${ value }`;\n\nfunction convertOffsetsToPositions(totalColumns, device, attributes) {\n\tconst offsets = [];\n\tlet position = 0;\n\n\tfor (let column = 0; column < totalColumns; column++) {\n\t\tconst customSpanName = getSpanForDevice(column, device);\n\t\tconst customOffsetName = getOffsetForDevice(column, device);\n\t\tconst span =\n\t\t\tattributes[customSpanName] ||\n\t\t\tgetDefaultSpan(device, totalColumns, column);\n\t\tconst offset = attributes[customOffsetName] || 0;\n\n\t\t// Position is the current position plus the offset\n\t\toffsets.push({\n\t\t\tposition: position + offset,\n\t\t\tspan,\n\t\t});\n\n\t\t// Move the position up by the offset and the width of the column\n\t\tposition += offset;\n\t\tposition += span;\n\t}\n\n\treturn offsets;\n}\n\n/*\n * Converts a position into a row\n */\nfunction getGridRow(position, maxWidth) {\n\treturn Math.floor(position / maxWidth);\n}\n\n/*\n * Converts a position into an offset from the start of a row\n */\nfunction getGridRowStart(position, maxWidth) {\n\treturn position % maxWidth;\n}\n\nfunction getDeviceClass(name, column, value, device, enabled = true) {\n\treturn {\n\t\tname,\n\t\tcolumn,\n\t\tvalue,\n\t\tdevice,\n\t\tenabled,\n\t};\n}\n\nfunction getDeviceColumnClass(device, columns, attributes) {\n\tconst classes = [];\n\tconst width = getGridWidth(device);\n\n\t// Convert all the offsets into absolute positions. Treat it as one giant row\n\tconst positions = convertOffsetsToPositions(columns, device, attributes);\n\n\t// Now go through and convert this to classes, converting the single row absolute positions into rows and row offsets\n\tfor (let index = 0; index < positions.length; index++) {\n\t\tconst { span, position } = positions[index];\n\t\tconst row = getGridRow(position, width);\n\t\tconst offset = getGridRowStart(position, width);\n\n\t\tclasses.push(getDeviceClass('span', index, span, device));\n\t\tclasses.push(\n\t\t\tgetDeviceClass('offset', index, offset + 1, device, 0 < offset),\n\t\t);\n\t\tclasses.push(getDeviceClass('row', index, row + 1, device));\n\t}\n\n\treturn classes;\n}\n\nfunction convertClassesToObject(classes, map) {\n\tconst cssValues = {};\n\n\tclasses\n\t\t.filter((item) => item.enabled && map[item.name])\n\t\t.map(\n\t\t\t(item) =>\n\t\t\t\t(cssValues[\n\t\t\t\t\tmap[item.name](item.column, item.value, item.device)\n\t\t\t\t] = true),\n\t\t);\n\n\treturn cssValues;\n}\n\n/**\n * These are used in the editor which doesn't rely on CSS media queries, and so the classes need to be device agnostic\n *\n * @param {string} device - Device string\n * @param {number} columns - Number of columns\n * @param {object} attributes - Grid block attributes\n * @param {object[]} columnAttributes - Grid column block attributes\n */\nexport function getAsEditorCSS(\n\tdevice,\n\tcolumns,\n\tattributes = {},\n\tcolumnAttributes = [],\n) {\n\tconst values = getDeviceColumnClass(device, columns, attributes);\n\tconst map = {\n\t\tspan: getDevicelessSpanClassName,\n\t\toffset: getDevicelessOffsetClassName,\n\t\trow: getDevicelessRowClassName,\n\t};\n\n\t// Apply column-specific alignment at the global level. This is because of the nested DOM inside the editor\n\tconst columnAlignments = {};\n\tfor (let index = 0; index < columns; index++) {\n\t\t// If the column has a vertical alignment and it's not the same as the global one then add a CSS class\n\t\tif (\n\t\t\tcolumnAttributes[index].verticalAlignment &&\n\t\t\tcolumnAttributes[index].verticalAlignment !== attributes.verticalAlignment\n\t\t) {\n\t\t\tcolumnAlignments[\n\t\t\t\tgetDevicelessAlignmentClassName(\n\t\t\t\t\tindex,\n\t\t\t\t\tcolumnAttributes[index].verticalAlignment,\n\t\t\t\t)\n\t\t\t] = true;\n\t\t}\n\t}\n\n\treturn {\n\t\t...convertClassesToObject(values, map),\n\t\t...columnAlignments,\n\t};\n}\n\n/*\n * These are used in the front end and need device-specific CSS\n */\nexport function getAsCSS(columns, attributes = {}) {\n\tlet classes = {};\n\tconst map = {\n\t\tspan: getDeviceSpanClassName,\n\t\toffset: getDeviceOffsetClassName,\n\t\trow: getDeviceRowClassName,\n\t};\n\n\tfor (\n\t\tlet deviceIndex = 0;\n\t\tdeviceIndex < DEVICE_BREAKPOINTS.length;\n\t\tdeviceIndex++\n\t) {\n\t\tclasses = {\n\t\t\t...classes,\n\t\t\t...convertClassesToObject(\n\t\t\t\tgetDeviceColumnClass(\n\t\t\t\t\tDEVICE_BREAKPOINTS[deviceIndex],\n\t\t\t\t\tcolumns,\n\t\t\t\t\tattributes,\n\t\t\t\t),\n\t\t\t\tmap,\n\t\t\t),\n\t\t};\n\t}\n\n\tif (!attributes.addGutterEnds) {\n\t\tclasses['wp-block-jetpack-layout-gutter__nowrap'] = true;\n\t}\n\n\tif (attributes.verticalAlignment && 'top' !== attributes.verticalAlignment) {\n\t\tclasses[`are-vertically-aligned-${attributes.verticalAlignment}`] = true;\n\t}\n\n\treturn classes;\n}\n\nexport function removeGridClasses(classes) {\n\tif (!classes) {\n\t\treturn classes;\n\t}\n\n\treturn classes\n\t\t.replace(/column\\d-\\w*-grid__\\w*-\\d*/g, '')\n\t\t.replace(/column\\d-grid__\\w*-\\d*/g, '')\n\t\t.replace(/\\s{2,}/, '')\n\t\t.replace(/wp-block-jetpack-layout-gutter__\\w*/, '')\n\t\t.replace(/is-vertically-aligned-\\w*/, '')\n\t\t.replace(/is-style-[A-Za-z-_]*/, '')\n\t\t.replace(/are-vertically-aligned-\\w*/);\n}\n\nexport function getGutterClasses({ gutterSize, addGutterEnds }) {\n\t// Note that 'large' is the default and doesn't output any CSS class\n\treturn {\n\t\t'wp-block-jetpack-layout-gutter__nowrap': !addGutterEnds,\n\t\t'wp-block-jetpack-layout-gutter__none': 'none' === gutterSize,\n\t\t'wp-block-jetpack-layout-gutter__small': 'small' === gutterSize,\n\t\t'wp-block-jetpack-layout-gutter__medium': 'medium' === gutterSize,\n\t\t'wp-block-jetpack-layout-gutter__huge': 'huge' === gutterSize,\n\t};\n}\n","/**\n * WordPress Dependencies\n */\n\nimport { Path, SVG } from '@wordpress/components';\n\nexport function GridIcon(props) {\n\tif (props.size) {\n\t\tprops.width = props.size;\n\t\tprops.height = props.size;\n\t}\n\n\treturn (\n\t\t<SVG\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"24\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<Path d=\"M19 6H6c-1.1 0-2 .9-2 2v9c0 1.1.9 2 2 2h13c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-7.5 11.5H6c-.3 0-.5-.2-.5-.5V8c0-.3.2-.5.5-.5h5.5v10zm4 0H13v-10h2.5v10zm4-.5c0 .3-.2.5-.5.5h-2v-10h2c.3 0 .5.2.5.5v9z\" />\n\t\t</SVG>\n\t);\n}\n\nexport function GridColumnIcon(props) {\n\treturn (\n\t\t<SVG\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"24\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<Path d=\"M19 6H6c-1.1 0-2 .9-2 2v9c0 1.1.9 2 2 2h13c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zM5.5 17V8c0-.3.2-.5.5-.5h5.5v10H6c-.3 0-.5-.2-.5-.5zm14 0c0 .3-.2.5-.5.5h-2v-10h2c.3 0 .5.2.5.5v9z\" />\n\t\t</SVG>\n\t);\n}\n\nfunction ColSetup1(props) {\n\treturn (\n\t\t<SVG\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"48\"\n\t\t\theight=\"48\"\n\t\t\tviewBox=\"0 0 48 48\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<Path d=\"M7 12v24h34V12H7zm32 22H9V14h30v20z\" />\n\t\t</SVG>\n\t);\n}\n\nfunction ColSetup2(props) {\n\treturn (\n\t\t<SVG\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"48\"\n\t\t\theight=\"48\"\n\t\t\tviewBox=\"0 0 48 48\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<Path d=\"M7,12v24h34V12H7z M23,34H9V14h14V34z M39,34H25V14h14V34z\" />\n\t\t</SVG>\n\t);\n}\n\nfunction ColSetup3(props) {\n\treturn (\n\t\t<SVG\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"48\"\n\t\t\theight=\"48\"\n\t\t\tviewBox=\"0 0 48 48\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<Path d=\"M7 12v24h34V12H7zm23 2h9v20h-9V14zm-2 20h-8V14h8v20zM9 14h9v20H9V14z\" />\n\t\t</SVG>\n\t);\n}\n\nfunction ColSetup4(props) {\n\treturn (\n\t\t<SVG\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"48\"\n\t\t\theight=\"48\"\n\t\t\tviewBox=\"0 0 48 48\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<Path d=\"M7 12v24h34V12H7zm8 22H9V14h6v20zm8 0h-6V14h6v20zm8 0h-6V14h6v20zm8 0h-6V14h6v20z\" />\n\t\t</SVG>\n\t);\n}\n\nfunction ColumnIcon({ columns, ...props }) {\n\tif (4 === columns) {\n\t\treturn <ColSetup4 {...props} />;\n\t}\n\n\tif (3 === columns) {\n\t\treturn <ColSetup3 {...props} />;\n\t}\n\n\tif (2 === columns) {\n\t\treturn <ColSetup2 {...props} />;\n\t}\n\n\treturn <ColSetup1 {...props} />;\n}\n\nexport default ColumnIcon;\n","/**\n * External Dependencies\n */\n\nimport classnames from 'classnames';\n\nfunction ResizeHandle({ direction, height, xPos, top, isSelected }) {\n\tconst classes = classnames(\n\t\t'wpcom-overlay-resize__handle',\n\t\t'components-resizable-box__container',\n\t\t{\n\t\t\t'is-selected': isSelected,\n\t\t},\n\t);\n\tconst wrapStyle = {\n\t\theight: `${height}px`,\n\t\twidth: `${xPos}px`,\n\t\ttop: `${top}px`,\n\t};\n\tconst dragStyle = {\n\t\tleft: `${xPos}px`,\n\t};\n\n\tconst handleClasses = classnames(\n\t\t'components-resizable-box__handle',\n\t\t'components-resizable-box__side-handle',\n\t\t{\n\t\t\t'components-resizable-box__handle-left': 'left' === direction,\n\t\t\t'components-resizable-box__handle-right': 'right' === direction,\n\t\t},\n\t);\n\n\treturn (\n\t\t<div className={classes} style={wrapStyle}>\n\t\t\t<span>\n\t\t\t\t<div className={handleClasses} style={dragStyle} />\n\t\t\t</span>\n\t\t</div>\n\t);\n}\n\nexport default ResizeHandle;\n","/**\n * External Dependencies\n */\n\nimport classnames from 'classnames';\n\n/**\n * WordPress Dependencies\n */\n\nimport { Component, createRef, useState, useEffect } from '@wordpress/element';\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\n\nimport findNearest from './nearest';\nimport ResizeHandle from './resize-handle';\n\n/*\n * The ResizeGrid is responsible for providing resizable grid column handles. It maps absolute mouse positions to grid columns, and then\n * validates that with the LayoutGrid.\n *\n * Due to the way the Gutenberg DOM is laid out, the ResizeGrid doesn't provide the resize handles that surround a column. Instead it\n * listens for mousedown events and when one happens it then displays a 'fake' resize handle that can be dragged. As the fake handle is\n * moved, the underlying grid is updated, giving the appearance it is being directly updated.\n */\n\nfunction ResizeGrid({\n\tclassName,\n\tonResize,\n\ttotalColumns,\n\tlayoutGrid,\n\tisSelected,\n\tchildren,\n}) {\n\tconst containerRef = createRef();\n\tconst [resizingColumn, setResizingColumn] = useState(-1);\n\tconst [xPos, setXPos] = useState(0);\n\tconst [height, setHeight] = useState(0);\n\tconst [direction, setDirection] = useState('right');\n\tconst [top, setTop] = useState(0);\n\n\tconst classes = classnames(\n\t\tclassName,\n\t\t-1 !== resizingColumn ? 'wp-block-jetpack-layout-grid__resizing' : null,\n\t);\n\n\t// const getNearestColumn = (direction, mouse) => {\n\t// \tconst { totalColumns, layoutGrid } = this.props;\n\t// \tconst start = layoutGrid.getStart(this.state.resizingColumn);\n\t// \tconst span = layoutGrid.getSpan(this.state.resizingColumn);\n\t// \tconst nearest = Math.min(\n\t// \t\ttotalColumns,\n\t// \t\tMath.max(\n\t// \t\t\t0,\n\t// \t\t\tfindNearest(\n\t// \t\t\t\tthis.containerRef.current,\n\t// \t\t\t\tthis.getMouseX(mouse),\n\t// \t\t\t\tdirection,\n\t// \t\t\t\ttotalColumns,\n\t// \t\t\t),\n\t// \t\t),\n\t// \t);\n\n\t// \tif ('left' === direction) {\n\t// \t\tif (nearest === start) {\n\t// \t\t\t// No change\n\t// \t\t\treturn null;\n\t// \t\t}\n\n\t// \t\t// We're changing the start position - adjust the span\n\t// \t\tconst diff = Math.abs(nearest - start);\n\t// \t\tconst adjustment = {\n\t// \t\t\tstart: nearest,\n\t// \t\t\tspan: nearest > start ? span - diff : span + diff,\n\t// \t\t\tdirection,\n\t// \t\t};\n\n\t// \t\t// Check we don't go beyond the end\n\t// \t\tif (adjustment.start >= start + span) {\n\t// \t\t\treturn null;\n\t// \t\t}\n\n\t// \t\t// Minimum span of 1\n\t// \t\tadjustment.span = Math.max(1, adjustment.span);\n\t// \t\treturn adjustment;\n\t// \t}\n\n\t// \t// We're changing the span\n\t// \t// New span is from the new position minus the current start\n\t// \treturn {\n\t// \t\tspan: Math.max(1, nearest - start),\n\t// \t\tdirection,\n\t// \t};\n\t// };\n\n\t// const getMouseX = (event) => {\n\t// \tconst { clientX, targetTouches } = event;\n\n\t// \treturn clientX || (targetTouches && targetTouches[0].clientX);\n\t// };\n\n\t// const getAdjustedOffset = (offset, optionalWidth = 0) => {\n\t// \tconst { width } = this.state;\n\t// \tconst handleWidth = 0 < optionalWidth ? optionalWidth : width;\n\n\t// \treturn (\n\t// \t\toffset -\n\t// \t\tthis.containerRef.current.getBoundingClientRect().left -\n\t// \t\thandleWidth / 2\n\t// \t);\n\t// };\n\n\t// const getAdjustedTop = (offset) =>\n\t// \toffset - this.containerRef.current.getBoundingClientRect().top;\n\n\t// const getRestrictedOffset = (offset) => {\n\t// \tconst { direction, max, width } = this.state;\n\n\t// \t// Ensure we dont go beyond or before the end of the other side of our block\n\t// \tif ('left' === direction) {\n\t// \t\treturn Math.min(max - width, offset);\n\t// \t}\n\n\t// \treturn Math.max(max + width, offset);\n\t// };\n\n\t// const getChildPosition = (element) => {\n\t// \tlet pos = 0;\n\n\t// \twhile (null !== element.previousSibling) {\n\t// \t\telement = element.previousSibling;\n\t// \t\tpos++;\n\t// \t}\n\n\t// \treturn pos;\n\t// };\n\n\t// const onMouseDown = (ev) => {\n\t// \tconst { target } = ev;\n\n\t// \t// This is a bit of hardcoded DOM searching - we check if the current click is on a resize handle and then find the column associated with that\n\t// \t// There may be a better way.\n\t// \tif (\n\t// \t\t(0 === ev.button || ev.touches) &&\n\t// \t\t(target.dataset.resizeRight || target.dataset.resizeLeft)\n\t// \t) {\n\t// \t\tthis.block = target.closest('.wp-block');\n\n\t// \t\tconst { height, right, left, top } = this.block.getBoundingClientRect();\n\t// \t\tconst { width } = target.getBoundingClientRect();\n\t// \t\tconst pos = this.getChildPosition(this.block);\n\t// \t\tconst isLeft = target.dataset.resizeLeft;\n\n\t// \t\tthis.setState({\n\t// \t\t\tresizingColumn: pos,\n\t// \t\t\txPos: this.getAdjustedOffset(this.getMouseX(ev), width),\n\t// \t\t\theight,\n\t// \t\t\twidth,\n\t// \t\t\ttop: this.getAdjustedTop(top),\n\t// \t\t\tdirection: isLeft ? 'left' : 'right',\n\t// \t\t\tmax: isLeft\n\t// \t\t\t\t? this.getAdjustedOffset(right, width)\n\t// \t\t\t\t: this.getAdjustedOffset(left, width),\n\t// \t\t});\n\n\t// \t\tif (0 === ev.button) {\n\t// \t\t\tdocument.addEventListener('mousemove', this.onMouseMove);\n\t// \t\t\tdocument.addEventListener('mouseup', this.onMouseUp);\n\n\t// \t\t\tev.preventDefault();\n\t// \t\t} else {\n\t// \t\t\tdocument.addEventListener('touchmove', this.onMouseMove);\n\t// \t\t\tdocument.addEventListener('touchend', this.onMouseUp);\n\t// \t\t}\n\n\t// \t\tev.stopPropagation();\n\t// \t}\n\t// };\n\n\t// const onMouseMove = (ev) => {\n\t// \tev.stopPropagation();\n\n\t// \tif (ev.touches === undefined) {\n\t// \t\tev.preventDefault();\n\t// \t}\n\n\t// \tconst { height } = this.block.getBoundingClientRect();\n\n\t// \tthis.setState({\n\t// \t\txPos: this.getRestrictedOffset(\n\t// \t\t\tthis.getAdjustedOffset(this.getMouseX(ev)),\n\t// \t\t),\n\t// \t\theight,\n\t// \t});\n\n\t// \t// Finally pass this up if a grid adjustment has been triggered\n\t// \tconst adjustment = this.getNearestColumn(this.state.direction, ev);\n\t// \tif (adjustment) {\n\t// \t\tthis.props.onResize(this.state.resizingColumn, adjustment);\n\t// \t}\n\t// };\n\n\t// const onMouseUp = (ev) => {\n\t// \tsetResizingColumn(-1);\n\n\t// \tdocument.removeEventListener('mousemove', onMouseMove);\n\t// \tdocument.removeEventListener('mouseup', onMouseUp);\n\t// \tdocument.removeEventListener('touchmove', onMouseMove);\n\t// \tdocument.removeEventListener('touchend', onMouseUp);\n\t// };\n\n\tconst blockProps = useBlockProps({\n\t\tclassName: classes,\n\t\t// onMouseDown,\n\t\t// onTouchStart: onMouseDown,\n\t\tref: containerRef,\n\t});\n\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t{-1 !== resizingColumn && (\n\t\t\t\t<ResizeHandle\n\t\t\t\t\tdirection={direction}\n\t\t\t\t\theight={height}\n\t\t\t\t\txPos={xPos}\n\t\t\t\t\ttop={top}\n\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{children}\n\t\t</div>\n\t);\n}\n\nexport default ResizeGrid;\n","/**\n * Internal Dependencies\n */\n\nimport { getSpanForDevice, getOffsetForDevice } from '../../constants';\nimport { getGridWidth, getGridMax, getDefaultSpan } from '../grid-defaults';\n\n/**\n * This contains all the grid column layout logic. That is, it knows how to move and resize columns on a grid (including a grid with multiple rows).\n * It does not handle mapping resize handles to grid positions\n */\nclass LayoutGrid {\n\tconstructor(attributes, device, columns) {\n\t\tthis.attributes = attributes;\n\t\tthis.device = device;\n\t\tthis.columnCount = columns;\n\t}\n\n\t// Gets a copy of the grid so we can modify it\n\tgetGridValues() {\n\t\tconst grid = {};\n\n\t\tfor (let pos = 0; pos < this.columnCount; pos++) {\n\t\t\tconst defaultSpan = getDefaultSpan(this.device, this.columnCount, pos);\n\n\t\t\tgrid[getSpanForDevice(pos, this.device)] =\n\t\t\t\tthis.getSpan(pos) || defaultSpan;\n\t\t\tgrid[getOffsetForDevice(pos, this.device)] = this.getOffset(pos);\n\t\t}\n\n\t\treturn grid;\n\t}\n\n\t/*\n\t * Apply a set of adjustments and return a new copy of the grid\n\t */\n\tapplyAdjustments(adjustments) {\n\t\tlet grid = this.getGridValues();\n\n\t\t// Run through the adjustments and apply to the grid\n\t\tfor (let index = 0; index < adjustments.length; index++) {\n\t\t\tgrid = { ...grid, ...adjustments[index] };\n\t\t}\n\n\t\treturn grid;\n\t}\n\n\tgetSpanAdjustment(column, value) {\n\t\treturn { [getSpanForDevice(column, this.device)]: value };\n\t}\n\n\tgetAdjustOffset(column, value) {\n\t\treturn { [getOffsetForDevice(column, this.device)]: value };\n\t}\n\n\tgetShrinkOffset(column, remaining) {\n\t\tconst spareOffset = this.getOffset(column);\n\t\tconst offsetUsed = remaining >= spareOffset ? spareOffset : remaining;\n\n\t\treturn {\n\t\t\tadjustment: this.getAdjustOffset(column, spareOffset - offsetUsed),\n\t\t\toffsetUsed,\n\t\t};\n\t}\n\n\thasOverlaps(positions) {\n\t\tfor (let index = 0; index < positions.length; index++) {\n\t\t\tconst first = positions[index];\n\n\t\t\tfor (let inner = index + 1; inner < positions.length; inner++) {\n\t\t\t\tconst second = positions[inner];\n\n\t\t\t\tif (first.start > second.start && first.start < second.end) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tif (first.end > second.start && first.end < second.end) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/*\n\t * Determine if an adjusted grid is valid. That is, the total of all the spans and offsets does not exceed\n\t * the maximum allowed by the grid layout, and none of the columns overlap each other\n\t */\n\tvalidateGrid(grid) {\n\t\tconst positions = [];\n\t\tconst rowWidth = getGridWidth(this.device);\n\t\tlet total = 0;\n\t\tlet rowTotal = 0;\n\n\t\tfor (let pos = 0; pos < this.columnCount; pos++) {\n\t\t\tconst span = grid[getSpanForDevice(pos, this.device)];\n\t\t\tconst offset = grid[getOffsetForDevice(pos, this.device)];\n\n\t\t\trowTotal += offset;\n\t\t\tif (rowTotal >= rowWidth) {\n\t\t\t\trowTotal -= rowWidth;\n\t\t\t}\n\n\t\t\trowTotal += span;\n\n\t\t\t// Does this row exceed the limit?\n\t\t\tif (rowTotal > rowWidth) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tpositions.push({ start: total + offset, end: total + offset + span });\n\n\t\t\ttotal += span + offset;\n\t\t}\n\n\t\t// Does it fit within the grid?\n\t\tif (total > getGridMax(this.device, this.columnCount)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Do we have any overlaps?\n\t\tif (this.hasOverlaps(positions)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/*\n\t * The end of a column was adjusted. Absorb/increase any offsets in subsequent columns so they remain in place\n\t * Returns an array of column adjustments\n\t */\n\tgetEndAdjustments(column, diff) {\n\t\tconst changes = [];\n\n\t\tif (0 > diff) {\n\t\t\t// Column end has moved left - add extra offset to the next column to keep it in place\n\t\t\tconst adjustment = this.getAdjustOffset(\n\t\t\t\tcolumn,\n\t\t\t\tthis.getOffset(column) + Math.abs(diff),\n\t\t\t);\n\n\t\t\treturn [adjustment];\n\t\t}\n\n\t\tif (0 < diff) {\n\t\t\t// Column end has moved right - eat any offset space after the column\n\t\t\tfor (let index = column; index < this.columnCount && 0 < diff; index++) {\n\t\t\t\tconst adjust = this.getShrinkOffset(index, Math.abs(diff));\n\n\t\t\t\tchanges.push(adjust.adjustment);\n\t\t\t\tdiff -= adjust.offsetUsed;\n\t\t\t}\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\tgetStartMovedLeft(column, diff) {\n\t\tconst changes = [];\n\n\t\t// Column start has moved left - eat any offset space before the column, including the column's own offset\n\t\tfor (let index = column; 0 <= index && 0 < diff; index--) {\n\t\t\tconst adjust = this.getShrinkOffset(index, diff);\n\n\t\t\tchanges.push(adjust.adjustment);\n\t\t\tdiff -= adjust.offsetUsed;\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/*\n\t * The start of a column was adjusted. Make adjustments to other columns so everything remains in place\n\t * Returns an array of column adjustments\n\t */\n\tgetStartAdjustments(column, newStart) {\n\t\tconst currentOffset = this.getOffset(column);\n\t\tconst newOffset = this.getOffsetFromStart(column, newStart);\n\t\tconst diff = newOffset - currentOffset;\n\n\t\tif (0 > diff) {\n\t\t\treturn this.getStartMovedLeft(column, Math.abs(diff));\n\t\t}\n\n\t\treturn [this.getAdjustOffset(column, newOffset)];\n\t}\n\n\t/*\n\t * Get span for a column\n\t */\n\tgetSpan(column) {\n\t\treturn this.attributes[getSpanForDevice(column, this.device)];\n\t}\n\n\t/*\n\t * Get offset from previous column\n\t */\n\tgetOffset(column) {\n\t\treturn this.attributes[getOffsetForDevice(column, this.device)];\n\t}\n\n\t/*\n\t * Get absolute start value for a column from the start of the row\n\t */\n\tgetStart(column) {\n\t\tlet start = 0;\n\n\t\t// Add all the offset and spans of previous columns\n\t\tfor (let pos = 0; pos < column; pos++) {\n\t\t\tstart += this.getSpan(pos) + this.getOffset(pos);\n\t\t}\n\n\t\tconst rows = Math.max(1, Math.floor(start / getGridWidth(this.device)));\n\n\t\t// Finally add the offset of our column to take us to the start of it, and then make it relative to the start of the row\n\t\treturn (\n\t\t\t(start + this.getOffset(column)) % (rows * getGridWidth(this.device))\n\t\t);\n\t}\n\n\t/*\n\t * Opposite of getStart() - returns an offset from the previous column when given a new start position\n\t */\n\tgetOffsetFromStart(column, start) {\n\t\tif (0 === column) {\n\t\t\t// Simple - the first column offset is the start position\n\t\t\treturn start;\n\t\t}\n\n\t\tconst currentStart = this.getStart(column); // This is the current start\n\t\tconst diff = start - currentStart;\n\n\t\treturn this.getOffset(column) + diff;\n\t}\n\n\tconvertOffsetToStart(column, offset) {\n\t\tconst start = this.getStart(column);\n\t\tconst diff = offset - this.getOffset(column);\n\n\t\treturn start + diff;\n\t}\n\n\t/*\n\t * Returns the layout grid, with an adjustment made. If no adjustment is made then returns null\n\t */\n\tgetAdjustedGrid(column, adjustment) {\n\t\tconst { start = this.getStart(column), span = this.getSpan(column) } =\n\t\t\tadjustment;\n\n\t\t// Get an array of adjustments so we can then check the grid is still valid before committing\n\t\tlet adjustments = [];\n\n\t\tif (start !== this.getStart(column) && span !== this.getSpan(column)) {\n\t\t\t// Both start and span have changed\n\t\t\tadjustments = adjustments.concat(this.getStartAdjustments(column, start));\n\t\t\tadjustments = adjustments.concat(this.getSpanAdjustment(column, span));\n\t\t} else if (span !== this.getSpan(column)) {\n\t\t\t// Only span has changed. Adjust that, and any columns that come after this\n\t\t\tadjustments = adjustments.concat(this.getSpanAdjustment(column, span));\n\t\t\tadjustments = adjustments.concat(\n\t\t\t\tthis.getEndAdjustments(column + 1, span - this.getSpan(column)),\n\t\t\t);\n\t\t} else if (start !== this.getStart(column)) {\n\t\t\t// Only the start has changed. Adjust that, and ensure subsequent columns dont move\n\t\t\tadjustments = adjustments.concat(this.getStartAdjustments(column, start));\n\t\t\tadjustments = adjustments.concat(\n\t\t\t\tthis.getEndAdjustments(column + 1, start - this.getStart(column)),\n\t\t\t);\n\t\t}\n\n\t\t// Convert the array of adjustments to a new set of attributes\n\t\tconst adjustedGrid = this.applyAdjustments(adjustments);\n\n\t\t// Now check everything still fits. If it doesnt then we ignore the entire change\n\t\tif (0 < adjustments.length && this.validateGrid(adjustedGrid)) {\n\t\t\t// Update all the values at once\n\t\t\treturn adjustedGrid;\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport default LayoutGrid;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * WordPress Dependencies\n */\n\nimport { useEffect, Fragment } from '@wordpress/element';\nimport { useViewportMatch, useResizeObserver } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tButton,\n\tToolbarGroup,\n\tMenuGroup,\n\tMenuItemsChoice,\n\tDropdown,\n} from '@wordpress/components';\nimport { BlockControls } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\n\nimport { getLayouts } from '../constants';\n\nfunction getCurrentViewport(isMobile, isTablet) {\n\tif (isMobile) {\n\t\treturn 'Mobile';\n\t}\n\n\tif (isTablet) {\n\t\treturn 'Tablet';\n\t}\n\n\treturn 'Desktop';\n}\n\nfunction PreviewDevice(props) {\n\tconst { viewPort, updateViewport } = props;\n\tconst { __experimentalSetPreviewDeviceType: setPreviewDevice } =\n\t\tuseDispatch('core/edit-post');\n\tconst previewDevice = useSelect(\n\t\t// eslint-disable-next-line no-underscore-dangle\n\t\t(select) => select('core/edit-post').__experimentalGetPreviewDeviceType(),\n\t\t[],\n\t);\n\tconst [resizeListener, sizes] = useResizeObserver();\n\tconst isTablet = useViewportMatch('medium', '<');\n\tconst isMobile = useViewportMatch('small', '<');\n\n\tuseEffect(() => {\n\t\tconst newPort = getCurrentViewport(isMobile, isTablet);\n\n\t\tif (newPort !== viewPort) {\n\t\t\tupdateViewport(newPort);\n\t\t}\n\t}, [sizes]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{resizeListener}\n\n\t\t\t{!isMobile && (\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\trenderToggle={({ isOpen, onToggle }) => (\n\t\t\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\taria-expanded={isOpen}\n\t\t\t\t\t\t\t\t\tonClick={onToggle}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\tgetLayouts().find(\n\t\t\t\t\t\t\t\t\t\t\t(layout) => layout.value === previewDevice,\n\t\t\t\t\t\t\t\t\t\t).icon\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\trenderContent={() => (\n\t\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t\t<MenuItemsChoice\n\t\t\t\t\t\t\t\t\tvalue={previewDevice}\n\t\t\t\t\t\t\t\t\tonSelect={(mode) => setPreviewDevice(mode)}\n\t\t\t\t\t\t\t\t\tchoices={getLayouts()}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n}\n\nexport default PreviewDevice;\n","/**\n * WordPress Dependencies\n */\nimport { withSelect, withDispatch } from '@wordpress/data';\n\n/**\n * WordPress Dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport { removeGridClasses } from './css-classname';\n\nfunction getColumnBlocks( currentBlocks, previous, columns ) {\n\tif ( columns > previous ) {\n\t\t// Add new blocks to the end\n\t\treturn [\n\t\t\t...currentBlocks,\n\t\t\t...Array.from( { length: columns - previous }, () =>\n\t\t\t\tcreateBlock( 'prc-core-block-library/layout-grid-column' )\n\t\t\t),\n\t\t];\n\t}\n\n\t// A little ugly but... ideally we remove empty blocks first, and then anything with content from the end\n\tlet cleanedBlocks = [ ...currentBlocks ];\n\tlet totalRemoved = 0;\n\n\t// Reverse the blocks so we start at the end. This happens in-place\n\tcleanedBlocks.reverse();\n\n\t// Remove empty blocks\n\tcleanedBlocks = cleanedBlocks.filter( ( block ) => {\n\t\tif (\n\t\t\ttotalRemoved < previous - columns &&\n\t\t\tblock.innerBlocks.length === 0\n\t\t) {\n\t\t\ttotalRemoved++;\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} );\n\n\t// If we still need to remove blocks then do them from the beginning before flipping it back round\n\treturn cleanedBlocks\n\t\t.slice( Math.max( 0, previous - columns - totalRemoved ) )\n\t\t.reverse();\n}\n\nfunction isSiteEditor() {\n\tconst siteEditorWrapper = document.querySelector( '#edit-site-editor' );\n\treturn !! siteEditorWrapper;\n}\n\nexport function withUpdateAlignment() {\n\treturn withDispatch( ( dispatch, ownProps, registry ) => {\n\t\treturn {\n\t\t\t/**\n\t\t\t * Update all child Column blocks with a new vertical alignment setting\n\t\t\t * based on whatever alignment is passed in. This allows change to parent\n\t\t\t * to overide anything set on a individual column basis.\n\t\t\t *\n\t\t\t * @param {string} verticalAlignment the vertical alignment setting\n\t\t\t */\n\t\t\tupdateAlignment( verticalAlignment ) {\n\t\t\t\tconst { clientId, setAttributes } = ownProps;\n\t\t\t\tconst { updateBlockAttributes } = dispatch(\n\t\t\t\t\t'core/block-editor'\n\t\t\t\t);\n\t\t\t\tconst { getBlockOrder } = registry.select(\n\t\t\t\t\t'core/block-editor'\n\t\t\t\t);\n\n\t\t\t\t// Update own alignment.\n\t\t\t\tsetAttributes( { verticalAlignment } );\n\n\t\t\t\t// Update all child Column Blocks to match\n\t\t\t\tconst innerBlockClientIds = getBlockOrder( clientId );\n\t\t\t\tinnerBlockClientIds.forEach( ( innerBlockClientId ) => {\n\t\t\t\t\tupdateBlockAttributes( innerBlockClientId, {\n\t\t\t\t\t\tverticalAlignment,\n\t\t\t\t\t} );\n\t\t\t\t} );\n\t\t\t},\n\t\t};\n\t} );\n}\n\nexport function withUpdateColumns() {\n\treturn withDispatch( ( dispatch, ownProps, registry ) => {\n\t\treturn {\n\t\t\tupdateColumns( previous, columns, columnValues ) {\n\t\t\t\tconst { clientId } = ownProps;\n\t\t\t\tconst { replaceBlock } = dispatch( 'core/block-editor' );\n\t\t\t\tconst { getBlocks } = registry.select( 'core/block-editor' );\n\t\t\t\tconst innerBlocks = getColumnBlocks(\n\t\t\t\t\tgetBlocks( clientId ),\n\t\t\t\t\tprevious,\n\t\t\t\t\tcolumns\n\t\t\t\t);\n\n\t\t\t\t// Replace the whole block with a new one so that our changes to both the attributes and innerBlocks are atomic\n\t\t\t\t// This ensures that the undo history has a single entry, preventing traversing to a 'half way' point where innerBlocks are changed\n\t\t\t\t// but the column attributes arent\n\t\t\t\tconst blockCopy = createBlock(\n\t\t\t\t\townProps.name,\n\t\t\t\t\t{\n\t\t\t\t\t\t...ownProps.attributes,\n\t\t\t\t\t\t...columnValues,\n\t\t\t\t\t\tclassName: removeGridClasses(\n\t\t\t\t\t\t\townProps.attributes.className\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tinnerBlocks\n\t\t\t\t);\n\n\t\t\t\treplaceBlock( clientId, blockCopy );\n\t\t\t},\n\t\t};\n\t} );\n}\n\nexport function withSetPreviewDeviceType() {\n\treturn withDispatch( ( dispatch ) => {\n\t\treturn {\n\t\t\tsetPreviewDeviceType( type ) {\n\t\t\t\tif ( isSiteEditor() ) {\n\t\t\t\t\treturn dispatch(\n\t\t\t\t\t\t'core/edit-site'\n\t\t\t\t\t)?.__experimentalSetPreviewDeviceType( type );\n\t\t\t\t}\n\n\t\t\t\tdispatch(\n\t\t\t\t\t'core/edit-post'\n\t\t\t\t)?.__experimentalSetPreviewDeviceType( type );\n\t\t\t},\n\t\t};\n\t} );\n}\n\nexport function withColumns() {\n\treturn withSelect( ( select, { clientId } ) => {\n\t\tconst { getBlockCount } = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tcolumns: getBlockCount( clientId ),\n\t\t};\n\t} );\n}\n\nexport function withColumnAttributes() {\n\treturn withSelect( ( select, { clientId } ) => {\n\t\tconst { getBlockOrder, getBlocksByClientId } = select(\n\t\t\t'core/block-editor'\n\t\t);\n\n\t\treturn {\n\t\t\tcolumnAttributes: getBlockOrder( clientId ).map(\n\t\t\t\t( innerBlockClientId ) =>\n\t\t\t\t\tgetBlocksByClientId( innerBlockClientId )[ 0 ].attributes\n\t\t\t),\n\t\t};\n\t} );\n}\n\nexport function withPreviewDeviceType() {\n\treturn withSelect( ( select ) => {\n\t\tif ( isSiteEditor() ) {\n\t\t\treturn {\n\t\t\t\tpreviewDeviceType: select(\n\t\t\t\t\t'core/edit-site'\n\t\t\t\t)?.__experimentalGetPreviewDeviceType(),\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tpreviewDeviceType: select(\n\t\t\t\t'core/edit-post'\n\t\t\t)?.__experimentalGetPreviewDeviceType(),\n\t\t};\n\t} );\n}\n","/**\n * External Dependencies\n */\nimport { times } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress Dependencies\n */\n\nimport {\n\tInnerBlocks,\n\tInspectorControls,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n} from '@wordpress/block-editor';\nimport { Component, createRef, Fragment } from '@wordpress/element';\nimport {\n\tPanelBody,\n\tTextControl,\n\tButtonGroup,\n\tButton,\n\tIconButton,\n\tPlaceholder,\n\tToggleControl,\n\tSelectControl,\n\tDisabled,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { ENTER, SPACE } from '@wordpress/keycodes';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal Dependencies\n */\n\nimport {\n\tgetAsEditorCSS,\n\tremoveGridClasses,\n\tgetGutterClasses,\n} from './css-classname';\nimport ColumnIcon from '../icons';\nimport {\n\tgetLayouts,\n\tgetColumns,\n\tDEVICE_BREAKPOINTS,\n\tgetSpanForDevice,\n\tgetOffsetForDevice,\n\tgetGutterValues,\n} from '../constants';\nimport { getGridWidth, getDefaultSpan } from './grid-defaults';\nimport ResizeGrid from './resize-grid';\nimport LayoutGrid from './layout-grid';\nimport PreviewDevice from './preview-device';\n\nimport {\n\twithUpdateAlignment,\n\twithUpdateColumns,\n\twithSetPreviewDeviceType,\n\twithColumns,\n\twithColumnAttributes,\n\twithPreviewDeviceType,\n} from './higher-order';\n\nimport './css/editor.scss';\n\nconst ALLOWED_BLOCKS = [ 'prc-core-block-library/layout-grid-column' ];\nconst MINIMUM_RESIZE_SIZE = 50; // Empirically determined to be a good size\n\nclass Edit extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\n\t\tthis.overlayRef = createRef();\n\t\tthis.state = {\n\t\t\tinspectorDeviceType: 'Desktop',\n\t\t\tviewPort: 'Desktop',\n\t\t};\n\t}\n\n\t/*\n\t* Change the layout (number of columns), resetting everything to the default\n\t*/\n\tonChangeLayout = ( columns ) => {\n\t\tconst columnValues = {};\n\n\t\tfor ( let pos = 0; pos < columns; pos++ ) {\n\t\t\tfor (\n\t\t\t\tlet device = 0;\n\t\t\t\tdevice < DEVICE_BREAKPOINTS.length;\n\t\t\t\tdevice++\n\t\t\t) {\n\t\t\t\tconst defaultSpan = getDefaultSpan(\n\t\t\t\t\tDEVICE_BREAKPOINTS[ device ],\n\t\t\t\t\tcolumns,\n\t\t\t\t\tpos\n\t\t\t\t);\n\n\t\t\t\tcolumnValues[\n\t\t\t\t\tgetSpanForDevice( pos, DEVICE_BREAKPOINTS[ device ] )\n\t\t\t\t] = defaultSpan;\n\t\t\t\tcolumnValues[\n\t\t\t\t\tgetOffsetForDevice( pos, DEVICE_BREAKPOINTS[ device ] )\n\t\t\t\t] = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis.props.updateColumns( this.props.columns, columns, columnValues );\n\t};\n\n\tonResize = ( column, adjustment ) => {\n\t\tconst { attributes, columns } = this.props;\n\t\tconst grid = new LayoutGrid(\n\t\t\tattributes,\n\t\t\tthis.getPreviewMode(),\n\t\t\tcolumns\n\t\t);\n\t\tconst adjustedGrid = grid.getAdjustedGrid( column, adjustment );\n\n\t\tif ( adjustedGrid ) {\n\t\t\tthis.adjustGrid( adjustedGrid );\n\t\t}\n\t};\n\n\tonChangeSpan = ( column, device, value ) => {\n\t\tconst { attributes, columns } = this.props;\n\t\tconst grid = new LayoutGrid( attributes, device, columns );\n\t\tconst adjustedGrid = grid.getAdjustedGrid( column, {\n\t\t\tspan: parseInt( value, 10 ),\n\t\t} );\n\n\t\tif ( adjustedGrid ) {\n\t\t\tthis.adjustGrid( adjustedGrid );\n\t\t}\n\t};\n\n\tonChangeOffset = ( column, device, value ) => {\n\t\tconst { attributes, columns } = this.props;\n\t\tconst grid = new LayoutGrid( attributes, device, columns );\n\t\tconst adjustedGrid = grid.getAdjustedGrid( column, {\n\t\t\tstart: grid.convertOffsetToStart( column, parseInt( value, 10 ) ),\n\t\t} );\n\n\t\tif ( adjustedGrid ) {\n\t\t\tthis.adjustGrid( adjustedGrid );\n\t\t}\n\t};\n\n\tadjustGrid( grid ) {\n\t\tconst { setAttributes, attributes } = this.props;\n\n\t\tsetAttributes( {\n\t\t\t...grid,\n\t\t\tclassName: removeGridClasses( attributes.className ),\n\t\t} );\n\t}\n\n\trenderDeviceSettings( columns, device, attributes ) {\n\t\tconst grid = new LayoutGrid( attributes, device, this.props.columns );\n\t\tconst settings = [];\n\n\t\tfor ( let column = 0; column < columns; column++ ) {\n\t\t\tconst span =\n\t\t\t\tgrid.getSpan( column ) ||\n\t\t\t\tgetDefaultSpan( device, columns, column );\n\t\t\tconst offset = grid.getOffset( column ) || 0;\n\n\t\t\tsettings.push(\n\t\t\t\t<div className=\"jetpack-layout-grid-settings\" key={ column }>\n\t\t\t\t\t<strong>\n\t\t\t\t\t\t{ __( 'Column', 'layout-grid' ) } { column + 1 }\n\t\t\t\t\t</strong>\n\t\t\t\t\t<div className=\"jetpack-layout-grid-settings__group\">\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tlabel={ __( 'Offset', 'layout-grid' ) }\n\t\t\t\t\t\t\tvalue={ offset || 0 }\n\t\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\t\tmax={ getGridWidth( device ) - 1 }\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tthis.onChangeOffset( column, device, value )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tlabel={ __( 'Span', 'layout-grid' ) }\n\t\t\t\t\t\t\tvalue={ span }\n\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\tmax={ getGridWidth( device ) }\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tthis.onChangeSpan( column, device, value )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\tcanResizeBreakpoint( device ) {\n\t\tif ( this.overlayRef && this.overlayRef.current ) {\n\t\t\tconst { width } = this.overlayRef.current.getBoundingClientRect();\n\n\t\t\treturn width / getGridWidth( device ) > MINIMUM_RESIZE_SIZE;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tupdateInspectorDevice( device ) {\n\t\tthis.setState( { inspectorDeviceType: device } );\n\n\t\t// Only update if not on mobile\n\t\tif ( this.state.viewPort !== 'Mobile' ) {\n\t\t\tthis.props.setPreviewDeviceType( device );\n\t\t}\n\t}\n\n\tgetPreviewMode() {\n\t\t// If we're rendering within a pattern preview, use the desktop layout for the preview.\n\t\tif ( this.props.isBlockOrPatternPreview ) {\n\t\t\treturn 'Desktop';\n\t\t}\n\n\t\t// If we're on desktop, or the preview is set to mobile, then return the preview mode\n\t\tif (\n\t\t\tthis.state.viewPort === 'Desktop' ||\n\t\t\tthis.props.previewDeviceType === 'Mobile'\n\t\t) {\n\t\t\treturn this.props.previewDeviceType;\n\t\t}\n\n\t\t// Return something appropriate for the viewport (mobile or tablet)\n\t\treturn this.state.viewPort;\n\t}\n\n\tgetInspectorMode() {\n\t\tif ( this.state.viewPort === 'Desktop' ) {\n\t\t\treturn this.props.previewDeviceType;\n\t\t}\n\n\t\t// Return something appropriate for the viewport (mobile or tablet)\n\t\treturn this.state.inspectorDeviceType;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tattributes = {},\n\t\t\tisSelected,\n\t\t\tcolumns,\n\t\t\tsetAttributes,\n\t\t\tupdateAlignment,\n\t\t\tcolumnAttributes,\n\t\t} = this.props;\n\t\tconst { viewPort } = this.state;\n\t\tconst previewMode = this.getPreviewMode();\n\t\tconst inspectorDeviceType = this.getInspectorMode();\n\t\tconst layoutGrid = new LayoutGrid( attributes, previewMode, columns );\n\n\t\tconst { gutterSize, addGutterEnds, verticalAlignment } = attributes;\n\n\t\tconst extra = getAsEditorCSS(\n\t\t\tpreviewMode,\n\t\t\tcolumns,\n\t\t\tattributes,\n\t\t\tcolumnAttributes\n\t\t);\n\t\tlet gridClasses = removeGridClasses( className );\n\t\t// gridClasses.replace(\n\t\t// \t'layout-grid',\n\t\t// \t'layout-grid-editor'\n\t\t// );\n\t\tconst classes = classnames(\n\t\t\tgridClasses,\n\t\t\t'wp-block-jetpack-layout-grid-editor',\n\t\t\textra,\n\t\t\t{\n\t\t\t\t'wp-block-jetpack-layout-tablet': previewMode === 'Tablet',\n\t\t\t\t'wp-block-jetpack-layout-desktop': previewMode === 'Desktop',\n\t\t\t\t'wp-block-jetpack-layout-mobile': previewMode === 'Mobile',\n\t\t\t\t'wp-block-jetpack-layout-resizable': this.canResizeBreakpoint(\n\t\t\t\t\tpreviewMode\n\t\t\t\t),\n\t\t\t\t[ `are-vertically-aligned-${ verticalAlignment }` ]: verticalAlignment,\n\t\t\t},\n\t\t\tgetGutterClasses( attributes )\n\t\t);\n\n\t\tif ( columns === 0 ) {\n\t\t\treturn (\n\t\t\t\t<Placeholder\n\t\t\t\t\ticon=\"layout\"\n\t\t\t\t\tlabel={ __( 'Choose Layout', 'layout-grid' ) }\n\t\t\t\t\tinstructions={ __(\n\t\t\t\t\t\t'Select a layout to start with:',\n\t\t\t\t\t\t'layout-grid'\n\t\t\t\t\t) }\n\t\t\t\t\tclassName={ classes }\n\t\t\t\t>\n\t\t\t\t\t<ul className=\"block-editor-inner-blocks__template-picker-options\">\n\t\t\t\t\t\t{ getColumns().map( ( column ) => (\n\t\t\t\t\t\t\t<li key={ column.value }>\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<ColumnIcon columns={ column.value } />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\tthis.onChangeLayout( column.value )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tclassName=\"block-editor-inner-blocks__template-picker-option\"\n\t\t\t\t\t\t\t\t\tlabel={ column.label }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t) ) }\n\t\t\t\t\t</ul>\n\t\t\t\t</Placeholder>\n\t\t\t);\n\t\t}\n\n\t\tconst toggleControl = (\n\t\t\t<ToggleControl\n\t\t\t\tlabel={ __( 'Add end gutters', 'layout-grid' ) }\n\t\t\t\thelp={\n\t\t\t\t\taddGutterEnds\n\t\t\t\t\t\t? __(\n\t\t\t\t\t\t\t\t'Toggle off to remove the spacing left and right of the grid.',\n\t\t\t\t\t\t\t\t'layout-grid'\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: __(\n\t\t\t\t\t\t\t\t'Toggle on to add space left and right of the layout grid. ',\n\t\t\t\t\t\t\t\t'layout-grid'\n\t\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tchecked={ addGutterEnds }\n\t\t\t\tonChange={ ( newValue ) =>\n\t\t\t\t\tsetAttributes( { addGutterEnds: newValue } )\n\t\t\t\t}\n\t\t\t/>\n\t\t);\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<PreviewDevice\n\t\t\t\t\tcurrentViewport={ viewPort }\n\t\t\t\t\tupdateViewport={ ( newPort ) =>\n\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\tviewPort: newPort,\n\t\t\t\t\t\t\tinspectorDeviceType: newPort,\n\t\t\t\t\t\t} )\n\t\t\t\t\t}\n\t\t\t\t/>\n\n\t\t\t\t<ResizeGrid\n\t\t\t\t\tclassName={ classes }\n\t\t\t\t\tonResize={ this.onResize }\n\t\t\t\t\ttotalColumns={ getGridWidth( previewMode ) }\n\t\t\t\t\tlayoutGrid={ layoutGrid }\n\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"wpcom-overlay-grid\" ref={ this.overlayRef }>\n\t\t\t\t\t\t<div className=\"wpcom-overlay-grid__inner\">\n\t\t\t\t\t\t\t{ times( getGridWidth( previewMode ) ).map(\n\t\t\t\t\t\t\t\t( item ) => (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName=\"wpcom-overlay-grid__column\"\n\t\t\t\t\t\t\t\t\t\tkey={ item }\n\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<InnerBlocks\n\t\t\t\t\t\ttemplate={ null }\n\t\t\t\t\t\ttemplateLock=\"all\"\n\t\t\t\t\t\tallowedBlocks={ ALLOWED_BLOCKS }\n\t\t\t\t\t/>\n\t\t\t\t</ResizeGrid>\n\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Layout', 'layout-grid' ) }>\n\t\t\t\t\t\t<div className=\"jetpack-layout-grid-columns block-editor-block-styles\">\n\t\t\t\t\t\t\t{ getColumns().map( ( column ) => (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={ column.value }\n\t\t\t\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t\t\t\t'block-editor-block-styles__item',\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t'is-active':\n\t\t\t\t\t\t\t\t\t\t\t\tcolumns === column.value,\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\tthis.onChangeLayout( column.value )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t\tENTER === event.keyCode ||\n\t\t\t\t\t\t\t\t\t\t\tSPACE === event.keyCode\n\t\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\tthis.onChangeLayout(\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn.value\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\t\t\t\ttabIndex=\"0\"\n\t\t\t\t\t\t\t\t\taria-label={ column.label }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"block-editor-block-styles__item-preview\">\n\t\t\t\t\t\t\t\t\t\t<ColumnIcon\n\t\t\t\t\t\t\t\t\t\t\tcolumns={ column.value }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"editor-block-styles__item-label block-editor-block-styles__item-label\">\n\t\t\t\t\t\t\t\t\t\t{ column.label }\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) ) }\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<p className='jetpack-layout-grid-help'>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'Changing the number of columns will reset your layout and could remove content.',\n\t\t\t\t\t\t\t\t'layout-grid'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __(\n\t\t\t\t\t\t\t'Responsive Breakpoints',\n\t\t\t\t\t\t\t'layout-grid'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<p className='jetpack-layout-grid-help'>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\"Previewing your post will show your browser's breakpoint, not the currently selected one.\",\n\t\t\t\t\t\t\t\t'layout-grid'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ButtonGroup>\n\t\t\t\t\t\t\t{ getLayouts().map( ( layout ) => (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tkey={ layout.value }\n\t\t\t\t\t\t\t\t\tisPrimary={\n\t\t\t\t\t\t\t\t\t\tlayout.value === inspectorDeviceType\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\t\t\t\tthis.updateInspectorDevice(\n\t\t\t\t\t\t\t\t\t\t\tlayout.value\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ layout.label }\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t) ) }\n\t\t\t\t\t\t</ButtonGroup>\n\n\t\t\t\t\t\t{ this.renderDeviceSettings(\n\t\t\t\t\t\t\tcolumns,\n\t\t\t\t\t\t\tinspectorDeviceType,\n\t\t\t\t\t\t\tattributes\n\t\t\t\t\t\t) }\n\t\t\t\t\t</PanelBody>\n\n\t\t\t\t\t<PanelBody title={ __( 'Gutter', 'layout-grid' ) }>\n\t\t\t\t\t\t<p>{ __( 'Gutter size', 'layout-grid' ) }</p>\n\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tvalue={ gutterSize }\n\t\t\t\t\t\t\tonChange={ ( newValue ) =>\n\t\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\t\tgutterSize: newValue,\n\t\t\t\t\t\t\t\t\taddGutterEnds:\n\t\t\t\t\t\t\t\t\t\tnewValue === 'none'\n\t\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t\t: addGutterEnds,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toptions={ getGutterValues() }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{ gutterSize === 'none' ? (\n\t\t\t\t\t\t\t<Disabled>{ toggleControl }</Disabled>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\ttoggleControl\n\t\t\t\t\t\t) }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\n\t\t\t\t<BlockControls>\n\t\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t\t/>\n\t\t\t\t</BlockControls>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nfunction MaybeDisabledEdit( props ) {\n\treturn (\n\t\t<Disabled.Consumer>\n\t\t\t{ ( isDisabled ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Edit { ...props } isBlockOrPatternPreview={ isDisabled } />\n\t\t\t\t);\n\t\t\t} }\n\t\t</Disabled.Consumer>\n\t);\n}\n\nexport default compose( [\n\twithUpdateAlignment(),\n\twithUpdateColumns(),\n\twithSetPreviewDeviceType(),\n\twithColumns(),\n\twithColumnAttributes(),\n\twithPreviewDeviceType(),\n] )( MaybeDisabledEdit );\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/** @typedef {import('@wordpress/blocks').WPBlockVariation} WPBlockVariation */\n\n/**\n * Internal Dependencies\n */\nimport ColumnIcon from '../icons';\n\n/**\n * Template option choices for predefined columns layouts.\n *\n * @type {WPBlockVariation[]}\n */\nconst variations = [\n\t{\n\t\tname: 'one-column',\n\t\ttitle: __('One'),\n\t\tdescription: __('One column', 'layout-grid'),\n\t\ticon: <ColumnIcon columns={1} />,\n\t\tisDefault: true,\n\t\tinnerBlocks: [['prc-core-block-library/layout-grid-column']],\n\t\tscope: ['block'],\n\t},\n\t{\n\t\tname: 'two-columns',\n\t\ttitle: __('Two'),\n\t\tdescription: __('Two columns', 'layout-grid'),\n\t\ticon: <ColumnIcon columns={2} />,\n\t\tinnerBlocks: [\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t],\n\t\tscope: ['block'],\n\t},\n\t{\n\t\tname: 'three-columns',\n\t\ttitle: __('Three'),\n\t\tdescription: __('Three columns', 'layout-grid'),\n\t\ticon: <ColumnIcon columns={3} />,\n\t\tinnerBlocks: [\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t],\n\t\tscope: ['block'],\n\t},\n\t{\n\t\tname: 'four-columns',\n\t\ttitle: __('Four'),\n\t\tdescription: __('Four columns', 'layout-grid'),\n\t\ticon: <ColumnIcon columns={4} />,\n\t\tinnerBlocks: [\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t\t['prc-core-block-library/layout-grid-column'],\n\t\t],\n\t\tscope: ['block'],\n\t},\n\t// @TODO need to add some common magazine type layouts.\n];\n\nexport default variations;\n","/**\n * WordPress Dependencies\n */\n\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport metadata from './block.json';\nimport edit from './edit';\nimport save from './save';\nimport variations from './variations';\nimport {\n\tgetSpanForDevice,\n\tgetOffsetForDevice,\n\tDEVICE_BREAKPOINTS,\n\tMAX_COLUMNS,\n} from '../constants';\nimport { GridIcon } from '../icons';\n\nimport './css/style.scss';\n\nconst { name, attributes } = metadata;\n\n// Add dynamicly generated attributes to support responsive grid options to the block.\nfunction getColumnAttributes(total, breakpoints) {\n\tconst attr = {};\n\n\tfor (let index = 0; index < total; index++) {\n\t\tbreakpoints.map((breakpoint) => {\n\t\t\tattr[getSpanForDevice(index, breakpoint)] = {\n\t\t\t\ttype: 'number',\n\t\t\t};\n\t\t\tattr[getOffsetForDevice(index, breakpoint)] = {\n\t\t\t\ttype: 'number',\n\t\t\t\tdefault: 0,\n\t\t\t};\n\t\t});\n\t}\n\n\treturn attr;\n}\n\nconst settings = {\n\ticon: GridIcon,\n\tattributes: {\n\t\t...attributes,\n\t\t...getColumnAttributes(MAX_COLUMNS, DEVICE_BREAKPOINTS),\n\t},\n\tedit,\n\tsave,\n\tvariations,\n};\n\nregisterBlockType(name, { ...metadata, ...settings });\n","/**\n * External Dependencies\n */\n\nimport classnames from 'classnames';\n\n/**\n * WordPress Dependencies\n */\n\nimport { InnerBlocks } from '@wordpress/block-editor';\nimport { Fragment } from '@wordpress/element';\n\n/**\n * Internal Dependencies\n */\n\nimport { getAsCSS, removeGridClasses, getGutterClasses } from './css-classname';\n\nconst save = ({ attributes, innerBlocks }) => {\n\tconst { className } = attributes;\n\tconst extra = getAsCSS(innerBlocks.length, attributes);\n\tconst classes = classnames(\n\t\tremoveGridClasses(className),\n\t\textra,\n\t\tgetGutterClasses(attributes),\n\t);\n\n\treturn (\n\t\t<div className={classes}>\n\t\t\t<InnerBlocks.Content />\n\t\t</div>\n\t);\n};\n\nexport default save;\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t2: 0,\n\t657: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_pewresearch_core_block_library\"] = self[\"webpackChunk_pewresearch_core_block_library\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [657], () => (__webpack_require__(83)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","createElement","SVG","xmlns","viewBox","Path","d","getColumns","label","__","DEVICE_DESKTOP","DEVICE_TABLET","DEVICE_MOBILE","getLayouts","icon","desktop","tablet","mobile","DEVICE_BREAKPOINTS","getSpanForDevice","column","device","getOffsetForDevice","getGridWidth","getDefaultSpan","columns","getDevicelessSpanClassName","getDevicelessOffsetClassName","getDevicelessRowClassName","getDevicelessAlignmentClassName","getDeviceSpanClassName","toLowerCase","getDeviceOffsetClassName","getDeviceRowClassName","getGridRow","position","maxWidth","Math","floor","getGridRowStart","getDeviceClass","name","enabled","getDeviceColumnClass","attributes","classes","width","positions","totalColumns","offsets","customSpanName","customOffsetName","span","offset","push","convertOffsetsToPositions","index","row","convertClassesToObject","map","cssValues","filter","item","removeGridClasses","replace","getGutterClasses","gutterSize","addGutterEnds","ColSetup1","props","height","ColSetup2","ColSetup3","ColSetup4","direction","xPos","top","isSelected","classnames","wrapStyle","dragStyle","left","handleClasses","className","style","onResize","layoutGrid","children","containerRef","createRef","resizingColumn","setResizingColumn","useState","setXPos","setHeight","setDirection","setTop","blockProps","useBlockProps","ref","constructor","columnCount","getGridValues","grid","pos","defaultSpan","getSpan","getOffset","applyAdjustments","adjustments","getSpanAdjustment","getAdjustOffset","getShrinkOffset","remaining","spareOffset","offsetUsed","adjustment","hasOverlaps","first","inner","second","start","end","validateGrid","rowWidth","total","rowTotal","getEndAdjustments","diff","changes","abs","adjust","getStartMovedLeft","getStartAdjustments","newStart","currentOffset","newOffset","getOffsetFromStart","getStart","rows","max","convertOffsetToStart","getAdjustedGrid","concat","adjustedGrid","viewPort","updateViewport","__experimentalSetPreviewDeviceType","setPreviewDevice","useDispatch","previewDevice","useSelect","select","__experimentalGetPreviewDeviceType","resizeListener","sizes","useResizeObserver","isTablet","useViewportMatch","isMobile","useEffect","newPort","getCurrentViewport","Fragment","BlockControls","Dropdown","renderToggle","isOpen","onToggle","ToolbarGroup","Button","onClick","find","layout","renderContent","MenuGroup","MenuItemsChoice","onSelect","mode","choices","isSiteEditor","document","querySelector","ALLOWED_BLOCKS","Edit","Component","super","columnValues","updateColumns","LayoutGrid","getPreviewMode","adjustGrid","parseInt","overlayRef","state","inspectorDeviceType","setAttributes","renderDeviceSettings","settings","TextControl","type","min","onChange","onChangeOffset","onChangeSpan","canResizeBreakpoint","current","getBoundingClientRect","updateInspectorDevice","setState","setPreviewDeviceType","isBlockOrPatternPreview","previewDeviceType","getInspectorMode","render","updateAlignment","columnAttributes","previewMode","verticalAlignment","extra","values","columnAlignments","getAsEditorCSS","gridClasses","Placeholder","instructions","IconButton","isSecondary","onChangeLayout","toggleControl","ToggleControl","help","checked","newValue","currentViewport","times","InnerBlocks","template","templateLock","allowedBlocks","InspectorControls","PanelBody","title","onKeyDown","event","ENTER","keyCode","SPACE","preventDefault","role","tabIndex","ButtonGroup","isPrimary","SelectControl","options","Disabled","BlockVerticalAlignmentToolbar","compose","withDispatch","dispatch","ownProps","registry","clientId","updateBlockAttributes","getBlockOrder","forEach","innerBlockClientId","previous","replaceBlock","getBlocks","innerBlocks","currentBlocks","Array","from","createBlock","cleanedBlocks","totalRemoved","reverse","block","slice","getColumnBlocks","withSelect","getBlockCount","getBlocksByClientId","isDisabled","description","isDefault","scope","metadata","size","breakpoints","attr","breakpoint","default","getColumnAttributes","edit","save","deviceIndex","getAsCSS","variations","registerBlockType","hasOwn","classNames","arg","argType","isArray","toString","join","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","a","definition","o","get","prop","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}
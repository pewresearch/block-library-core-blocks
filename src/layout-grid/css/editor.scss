@import './constants.scss';

/**
 * Grid Columns
 */
.wp-block-prc-block-layout-grid > .block-editor-block-list__layout {
	display: grid;
	grid-gap: $grid-gutter;
	grid-template-columns: $grid-desktop;
	padding-left: $grid-gutter;
	padding-right: $grid-gutter;

	// // Reset inherited negative margins.
	// // These margins are in the block editor to compensate for the 14px block padding on all blocks.
	// // They don't play well with CSS Grid, so we reset them, and re-apply them later.
	// margin-left: 0;
	// margin-right: 0;

	// // Every block, including nested blocks, are born with an intrinsic minimum margin.
	// // This resets that for the containers, which aren't meant to have that intrinsically.
	// > .wp-block > .block-editor-block-list__block-edit > [data-block] {
	// 	margin-top: 0;
	// 	margin-bottom: 0;
	// }

	.wp-block {
		max-width: 100%;
		&[data-type="prc-block/layout-grid-column"] {
			width: 100%;
		}
	}

	// Prevent long unbroken words from overflowing.
	word-break: break-word; // For back-compat.
	overflow-wrap: break-word; // New standard.

	@for $i from 1 through 12 {
		@for $x from 1 through 4 {
			& > [data-type="prc-block/layout-grid-column"].column#{ $x }-grid__start-#{ $i } {
				grid-column-start: $i;
			}
		}
	}

	@for $i from 1 through 12 {
		@for $x from 1 through 4 {
			& > [data-type="prc-block/layout-grid-column"].column#{ $x }-grid__span-#{ $i }  {
				grid-column-end: span $i; // Set it to span $i columns, regardless of starting position.
			}
		}
	}

	@for $i from 1 through 4 {
		@for $x from 1 through 4 {
			& > [data-type="prc-block/layout-grid-column"].column#{ $x }-grid__row-#{ $i } {
				grid-row-start: $i;
			}
		}
	}
}

/**
 * Visual grid overlay
 */
.prc-block-layout-grid__overlay {
	// The following rules are for Safari.
	// A CSS grid rendering issue means the child nodes of this grid
	// won't stretch to fit the vertical space, unless the position
	// property is changed from absolute, to something else, and back.
	// By being relative when unselected and absolute when selected, we
	// constantly "refresh" this hack.
	position: relative;

	.is-selected & {
		position: absolute;
	}

	top: 0;
	left: 0;
	bottom: 0;
	right: 0;

	// Colorize for dark themes also.
	color: rgba(0,0,0,0.03);
	.is-dark-theme & {
		color: rgba(255,255,255,0.15);
	}

	> .prc-block-layout-grid__overlay__inner {
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		display: grid;
		grid-gap: $grid-gutter;
		grid-template-columns: $grid-desktop;
		height: 100%;

		// This padding adds end gutters.
		border-left: $grid-gutter solid currentColor;
		border-right: $grid-gutter solid currentColor;

		// Lower the z-index so it's under the block borders.
		z-index: 0;
	}

	// Solid gutter shading.
	.prc-block-layout-grid__overlay__column {
		transition: border .4s ease;

		// Default gutter.
		.is-selected & {
			box-shadow:
			-($grid-gutter / 2) 0 0 0 currentColor,
			($grid-gutter / 2) 0 0 0 currentColor;
		}

		// // No gutter.
		// .wp-block-prc-block-library-layout-gutter__none & {
		// 	.is-selected & {
		// 		box-shadow:
		// 		-1px 0 0 0 currentColor,
		// 		1px 0 0 0 currentColor;
		// 	}
		// }

		// // Small gutter.
		// .wp-block-prc-block-library-layout-gutter__small & {
		// 	.is-selected & {
		// 		box-shadow:
		// 		-($grid-gutter-small / 2) 0 0 0 currentColor,
		// 		($grid-gutter-small / 2) 0 0 0 currentColor;
		// 	}
		// }

		// // Medium gutter.
		// .wp-block-prc-block-library-layout-gutter__medium & {
		// 	.is-selected & {
		// 		box-shadow:
		// 		-($grid-gutter-medium / 2) 0 0 0 currentColor,
		// 		($grid-gutter-medium / 2) 0 0 0 currentColor;
		// 	}
		// }

		// // Huge gutter.
		// .wp-block-prc-block-library-layout-gutter__huge & {
		// 	.is-selected & {
		// 		box-shadow:
		// 		-($grid-gutter-huge / 2) 0 0 0 currentColor,
		// 		($grid-gutter-huge / 2) 0 0 0 currentColor;
		// 	}
		// }
	}
}

// End gutters and gap.
.prc-block-layout-grid__overlay {
	// box-shadow:
	// inset -#{ $grid-gutter-large / 2 } 0 0 0 currentColor,
	// inset #{ $grid-gutter-large / 2 } 0 0 0 currentColor;
}

.wp-block-prc-block-library-layout-gutter__none .wpcom-overlay-grid {
	grid-gap: $grid-gutter-none;
	padding-left: $grid-gutter;
	padding-right: $grid-gutter;
}

.wp-block-prc-block-library-layout-gutter__small .wpcom-overlay-grid {
	grid-gap: $grid-gutter-small;
	padding-left: $grid-gutter-small;
	padding-right: $grid-gutter-small;

	box-shadow:
	inset -#{ $grid-gutter-small / 2 } 0 0 0 currentColor,
	inset #{ $grid-gutter-small / 2 } 0 0 0 currentColor;
}

.wp-block-prc-block-layout-grid__gutter__medium .prc-block-layout-grid__overlay {
	grid-gap: $grid-gutter-medium;
	padding-left: $grid-gutter-medium;
	padding-right: $grid-gutter-medium;

	box-shadow:
	inset -#{ $grid-gutter-medium / 2 } 0 0 0 currentColor,
	inset #{ $grid-gutter-medium / 2 } 0 0 0 currentColor;
}

.wp-block-prc-block-library-layout-gutter__huge .wpcom-overlay-grid {
	grid-gap: $grid-gutter-huge;
	padding-left: $grid-gutter-huge;
	padding-right: $grid-gutter-huge;

	box-shadow:
	inset -#{ $grid-gutter-huge / 2 } 0 0 0 currentColor,
	inset #{ $grid-gutter-huge / 2 } 0 0 0 currentColor;
}

.wp-block-prc-block-library-layout-gutter__nowrap .wpcom-overlay-grid {
	padding-left: $grid-gutter-none;
	padding-right: $grid-gutter-none;

	box-shadow: none;
}

/**
 * Placeholder
 */
.wp-block-prc-block-layout-grid {
	.block-editor-inner-blocks__template-picker-options {
		display: flex;
		flex-direction: row;
		flex-wrap: nowrap;
		width: 100%;
		list-style: none;
		margin-left: 0;
		margin-bottom: 0;
		padding-left: 0;

		li {
			margin-left: 0;
			padding-left: 0;
			list-style: none;
		}

		> li .components-button {
			list-style: none;
			flex-shrink: 1;
			max-width: 72px;
			margin-right: 8px;
			flex-basis: 100%;
		}

		.block-editor-inner-blocks__template-picker-option {
			height: auto;
			line-height: inherit;
			background: #fff;
		}
	}
 }


/**
 * Controls
 */

.prc-block-layout-grid__controls__layout {
	display: flex;
	justify-content: space-between;
	font-size: 12px;
	margin-bottom: 12px;

	.block-editor-block-styles__item-preview {
		background: none;
		display: flex;
		justify-content: center;
		min-height: auto;

		svg {
			fill: currentColor;
		}
	}

	.block-editor-block-styles__item {
		border-radius: 2px;
		flex: 1;
		cursor: pointer;
		text-align: center;

		&.is-active {
			background-color: #1e1e1e;
			color: #fff;
		}
	}
}
